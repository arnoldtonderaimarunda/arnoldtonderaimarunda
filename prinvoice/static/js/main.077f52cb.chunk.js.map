{"version":3,"sources":["components/UserForm/UserForm.js","components/NavBar/NavBar.js","utils.js","components/NewInvoiceForm/InvoicePdf.js","database/utils.js","components/NewInvoiceForm/logic.js","config.js","components/NewInvoiceForm/NewInvoiceFormItemRow.js","components/NewInvoiceForm/NewInvoiceForm.js","database/init.js","database/models/resource/resource.js","database/models/agent/agent.js","database/models/event/invoice.js","database/models/event/invoiceItem.js","database/models/agent/user.js","components/InvoicesDashboard/logic.js","components/InvoicesDashboard/InvoicesDashboardRow.js","components/InvoicesDashboard/InvoicesDashboard.js","components/CustomersDashboard/logic.js","components/CustomersDashboard/CustomersDashboard.js","components/Dashboard/logic.js","components/Dashboard/Dashboard.js","components/Account/logic.js","components/Account/Account.js","App.js","index.js"],"names":["UserForm","props","handleInputChange","event","state","error","setState","undefined","target","value","name","handleSubmitForm","a","mode","handleSignIn","username","password","loading","preventDefault","window","userbase","signUp","rememberMe","email","signIn","user","message","handleForgotPassword","forgotPassword","alert","lastUsedUsername","this","disabled","className","style","marginBottom","margin","onSubmit","marginTop","type","autoComplete","onChange","defaultValue","placeholder","textAlign","icon","faInfoCircle","marginRight","color","href","rel","minHeight","lineHeight","paddingTop","width","cursor","onClick","Component","NavBar","handleClickOutside","e","menuOpen","menuWrapperRef","current","contains","handleToggleMenu","handleSignOut","confirm","signOut","handleResetState","React","createRef","document","addEventListener","removeEventListener","ref","id","faBars","location","textDecoration","faUser","handleDownloadData","faDownload","handleImportData","marginLeft","faUpload","faChartLine","faFileAlt","faUsers","height","viewBox","fill","xmlns","transform","x","y","stroke","strokeWidth","x1","y1","x2","y2","d","currencySymbolMap","toUniversalDateFormat","date","Date","toLocaleDateString","year","month","day","dateFormatRegex","addDaysToDate","days","result","setDate","getDate","numberToNumberString","number","decimals","Number","toFixed","toLocaleString","minimumFractionDigits","maximumFractionDigits","isValidDate","isNaN","getSpanWithTextHighlighted","string","searchValue","text","str","length","highlightIndex","toLowerCase","indexOf","push","key","Math","random","substring","_getYearAndMonth","monthsDiffFromMonthProvided","getFullYear","getMonth","_getBeginningOfDay","newDate","setHours","_getEndOfDay","getFirstDayOfMonth","firstDayOfMonth","dateOfFirstDayOfMonth","getLastDayOfMonth","theNextMonth","oneDayBeforeTheNextMonth","lastDayOfMonth","getMonthAsString","downloadFileLocally","file","navigator","userAgent","match","reader","FileReader","onload","readAsDataURL","saveAs","readFile","Promise","resolve","reject","onerror","readAsArrayBuffer","flatten","array","concat","COLUMN_1_WIDTH_PERCENT","COLUMN_2_WIDTH_PERCENT","COLUMN_3_WIDTH_PERCENT","COLUMN_4_WIDTH_PERCENT","InvoicePdf","invoice","uuid","payee","payor","currency","items","discount","taxPercent","shipping","note","dateIssued","dateDue","datePaid","subtotal","getSubtotal","subtotalAfterDiscount","getSubtotalAfterDiscount","tax","getTax","total","getTotal","discountDisplay","shippingDisplay","subject","JSON","stringify","size","padding","flexDirection","fontSize","backgroundColor","map","item","i","quantity","unitPrice","getItemAmount","COLUMN_2_WIDTH","COLUMN_1_WIDTH","setCreatedDateOnSqlStatements","sqlStatements","createdDate","toISOString","sqlStatement","sql","bindValues","$created_date","getSqlRows","sqlJsDb","rows","stmt","prepare","step","getAsObject","free","getBindValuePlaceholders","columns","singleBindValues","singleBindValuesString","allBindValues","toString","DetailedErrors","errors","errorMap","Error","newEmptyInvoice","userDefaults","getUserDefaults","userId","uuidv4","newEmptyInvoiceItem","resourceUuid","BigNumber","multipliedBy","itemAmount","isPositive","plus","discountBigNumber","afterDiscount","minus","isNegative","taxPercentBigNumber","dividedBy","shippingBigNumber","validateInvoice","test","itemNumber","_validateInvoiceItems","emailInvoiceLink","dueDate","lineItems","encodeURIComponent","body","downloadInvoicePdf","pdfObject","reactPdf","toBlob","pdfBlob","issuedDate","pdfFilename","pdf","File","getProducts","_insertInvoice","$uuid","$date_issued","$date_due","$currency","$discount","$tax_percent","$shipping","$note","$payee_uuid","$payee_name","$payee_email","$payor_name","$payor_email","_insertItem","invoiceUuid","$invoice_uuid","$item_number","$item_name","$unit_price","$quantity","_upsertResource","$name","createInvoice","upsertUserDefaults","upsertPayor","$email","upsertResources","insertItems","insertInvoice","execSql","databaseName","NewInvoiceFormItemRow","handleClickOutsideProductsDropdown","productDropdownOpen","productDropdownRef","handleHitEnter","keyCode","handleToggleProductDropdown","handleSetItem","itemIndex","product","canRemove","productDropdownOptions","chosenProducts","handleRemoveItem","handleUpdateItem","onFocus","filter","unit_price","required","min","NewInvoiceForm","handleUpdateAgent","agent","property","customerDropdownOpen","handleChangeCurrency","handleAddItem","itemResourceUuid","itemsWithItemRemoved","indexGuess","itemGuess","handleUpdateInvoiceProperty","handleOpenTaxEditor","editingTax","handleClickOutsideTaxWrapper","taxWrapperRef","handleClickOutsideCustomersDropdown","customerDropdownRef","handleSaveInvoice","topOfPageRef","scrollIntoView","behavior","hash","handleToggleDropdown","dropdownName","dropdownOpen","handleSetPayor","customer","handleClickOutsideMoreOptionsDropdown","moreOptionsOpen","moreOptionsRef","mobileMoreOptionsRef","handleToggleMoreOptions","customerDropdownOptions","history","back","faEnvelope","faFilePdf","err","faExclamationTriangle","cust","pattern","maxLength","title","Object","keys","currencyOption","colSpan","paddingRight","elm","VERSION_1_MIGRATION","_upsertInvoices","payeeUuidIndex","payorUuidIndex","exec","values","payorNameIndex","column","bindValuePlaceHolders","singleRowBindValuePlaceholders","payorName","_upsertInvoiceItems","resourceUuidIndex","itemNameIndex","resourceName","_upsert","tableName","init","changeHandler","db","version","openSqlJsDatabase","migration","restoreFromBackupFile","backupFile","Uint8Array","data","sqlJs","Database","console","warn","sql_invoice_total","getInvoices","sqlInvoiceSubtotals","sqlInvoiceTotals","getInvoiceItems","getInvoiceObjectForExport","invoiceItems","date_issued","date_due","date_paid","tax_percent","payor_name","payor_email","payor_uuid","payee_name","payee_email","payee_uuid","item_number","item_name","setDatePaid","$date_paid","deleteInvoice","deleteInvoiceItems","InvoicesDashboardRow","handleClickOutsideDatePaidEditor","editingDatePaid","datePaidInEditMode","datePaidEditor","handleSetDatePaid","handleClickOutsideRowMenu","rowMenuOpen","rowMenu","handleEditDatePaid","updatingRowStatus","handleUpdatingRowStatus","handleUpdateDate","handleUnsetDatePaid","finalDatePaid","_isMounted","handleToggleRowMenu","handleEmailInvoiceLink","invoiceObject","handleDownloadInvoicePdf","handleDeleteInvocie","faTrashAlt","InvoicesDashboard","invoices","getCustomers","sql_invoice_subtotal","CustomersDashboard","customers","amount_owes","amount_received","getCurrency","currencyRow","hasCreatedInvoice","_getSalesForMonth","start","end","sqlInvoiceSubtotalsForMonth","sqlInvoiceTotalsForMonth","Dashboard","monthlySales","lastNMonths","currentDate","sales","months","getMonthlySales","salesByCustomer","sqlSalesByCustomer","sqlRanks","sqlTopCustomers","sqlOtherCustomers","resultTopCustomers","resultOtherCustomers","r","getSalesByCustomer","salesByProduct","sqlInvoiceItemAmounts","sqlSalesByProduct","sqlTopProducts","sqlOtherProducts","resultTopProducts","resultOtherProducts","products","getSalesByProduct","dateToday","getTotals","received","owed","overdue","customerCount","count","getCustomerCount","suggestCreateInvoice","displayTotal","displayReceived","displayOwed","displayOverdue","labels","datasets","label","borderColor","borderWidth","options","maintainAspectRatio","scales","xAxes","gridLines","drawBorder","lineWidth","yAxes","ticks","callback","fontColor","tooltips","callbacks","tooltipItems","yLabel","legend","display","xLabel","updateDefaultCurrency","Account","handleUpdateAccount","loadingUpdateAccount","errorUpdateAccount","all","updateUser","handleUpdatePassowrd","currentPassword","newPassword","loadingUpdatePassword","errorUpdatePassword","handleDeleteAccount","deleteUser","App","loadData","handleSetUser","userResult","handleUpdateUser","getDefaultSignedInMode","handleReadHash","signedIn","hashRoute","export","filename","fileExtension","handleImportedFile","input","createElement","accept","opacity","onchange","files","removeChild","appendChild","click","importFile","restoringFromBackupFile","appId","updateUserHandler","session","localStorage","clear","top","set","DECIMAL_PLACES","ROUNDING_MODE","defaults","global","defaultFontFamily","ReactDOM","render","StrictMode","getElementById"],"mappings":"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AAE,2BAA2BN,OAAO,UAAUC,YAAY,mB,GA/F5CxC,c,+ECRvB8C,EAAoB,CAC/B,IAAO,gBACP,IAAO,SACP,IAAO,IACP,IAAO,SACP,IAAO,SACP,IAAO,KACP,IAAO,IACP,IAAO,IACP,IAAO,SACP,IAAO,SACP,IAAO,KACP,IAAO,IACP,IAAO,SACP,IAAO,eACP,IAAO,iBACP,IAAO,MACP,IAAO,IACP,IAAO,IACP,IAAO,KACP,IAAO,KACP,IAAO,IACP,IAAO,SACP,IAAO,MACP,IAAO,IACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,IACP,IAAO,KACP,IAAO,MACP,IAAO,IACP,IAAO,OACP,IAAO,IACP,IAAO,SACP,IAAO,IACP,IAAO,SACP,IAAO,IACP,IAAO,UACP,IAAO,MACP,IAAO,KACP,IAAO,MACP,IAAO,eACP,IAAO,KACP,IAAO,OACP,IAAO,MACP,IAAO,KACP,IAAO,SACP,IAAO,SACP,IAAO,IACP,IAAO,OACP,IAAO,OACP,IAAO,SACP,IAAO,OACP,IAAO,SACP,IAAO,WACP,IAAO,OACP,IAAO,IACP,IAAO,KACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,KACP,IAAO,IACP,IAAO,KACP,IAAO,KACP,IAAO,SACP,IAAO,OACP,IAAO,SACP,IAAO,gBACP,IAAO,SACP,IAAO,KACP,IAAO,OACP,IAAO,KACP,IAAO,KACP,IAAO,OACP,IAAO,MACP,IAAO,eACP,IAAO,SACP,IAAO,KACP,IAAO,SACP,IAAO,SACP,IAAO,KACP,IAAO,IACP,IAAO,eACP,IAAO,SACP,IAAO,OACP,IAAO,SACP,IAAO,IACP,IAAO,IACP,IAAO,SACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,MACP,IAAO,MACP,IAAO,KACP,IAAO,qBACP,IAAO,IACP,IAAO,SACP,IAAO,OACP,IAAO,KACP,IAAO,KACP,IAAO,SACP,IAAO,KACP,IAAO,KACP,IAAO,IACP,IAAO,KACP,IAAO,KACP,IAAO,IACP,IAAO,SACP,IAAO,KACP,IAAO,KACP,IAA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","file":"static/js/main.077f52cb.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { func, string } from 'prop-types'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons/faInfoCircle'\nimport './UserForm.css'\n\nexport default class UserForm extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      username: this.props.lastUsedUsername,\n      password: '',\n      error: undefined,\n      loading: false\n    }\n  }\n\n  handleInputChange = (event) => {\n    if (this.state.error) this.setState({ error: undefined })\n\n    const target = event.target\n    const value = target.value\n    const name = target.name\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmitForm = async (event) => {\n    const { mode, handleSignIn } = this.props\n    const { username, password, loading } = this.state\n    event.preventDefault()\n\n    if (loading) return\n    this.setState({ loading: true, error: undefined })\n\n    try {\n      const user = await (mode === 'sign-up'\n        ? window.userbase.signUp({ username, password, rememberMe: 'local', email: username })\n        : window.userbase.signIn({ username, password, rememberMe: 'local' })\n      )\n\n      await handleSignIn(user)\n    } catch (e) {\n      this.setState({ error: e.message, loading: false })\n    }\n  }\n\n  handleForgotPassword = async () => {\n    const { username, loading } = this.state\n    if (loading) return\n\n    this.setState({ loading: true })\n\n    try {\n      await window.userbase.forgotPassword({ username })\n      window.alert('Check your email!')\n      this.setState({ loading: false })\n    } catch (e) {\n      this.setState({ error: e.message, loading: false })\n    }\n  }\n\n  render() {\n    const { username, password, error, loading } = this.state\n    const { mode } = this.props\n\n    const disabled = !username || !password\n\n    return (\n      <div>\n        <div className='UserFormTitle'>\n          <h1 style={{ marginBottom: '20px' }}>Prinvoice</h1>\n          <h3 style={{ margin: '0' }}>Secure, private, beautiful invoices.</h3>\n        </div>\n\n        <div className='OuterUserForm'>\n          <div className='container UserForm'>\n            <form onSubmit={this.handleSubmitForm}>\n\n              <div style={{ marginTop: '1em' }}>\n                <input\n                  className='text-input'\n                  type='email'\n                  name='username'\n                  autoComplete='username'\n                  onChange={this.handleInputChange}\n                  defaultValue={username}\n                  placeholder='Email'\n                />\n              </div>\n\n              <div style={{ marginTop: '1em' }}>\n                <input\n                  className='text-input'\n                  type='password'\n                  name='password'\n                  autoComplete='new-password'\n                  onChange={this.handleInputChange}\n                  placeholder='Password'\n                />\n              </div>\n\n              { mode === 'sign-up' &&\n                <div style={{ marginTop: '1em' }}>\n                  <div className='UserFormPasswordWarning'>\n                    <p style={{ textAlign: 'justify' }}>\n                      <FontAwesomeIcon icon={faInfoCircle} style={{ marginRight: '.5em', color: '#66bbae' }} />\n                      Save your password in a safe place, such as a <a href='https://bitwarden.com/products/' target='_blank' rel='noopener noreferrer'>password manager</a>.\n                      You are the only person in the world who can access your invoices.\n                      If you forget your password and lose your device, no one in the world\n                      can recover your invoices.\n                    </p>\n                  </div>\n                </div>\n              }\n\n              <div style={{ marginTop: '1em' }}>\n                <input\n                  className='button'\n                  type='submit'\n                  value={mode === 'sign-up' ? 'Sign Up' : 'Sign In'}\n                  disabled={disabled}\n                />\n              </div>\n\n              <div style={{ marginTop: '1em', minHeight: '1em', lineHeight: '1em' }}>\n                { loading && <div style={{ paddingTop: '.35rem' }}><div className='loader'></div></div>}\n                { error && <div className='error' >{error}</div>}\n              </div>\n\n              { mode === 'sign-in' &&\n                <div style={{ marginTop: '1em' }}>\n                  <p style={{ width: 'fit-content', margin: 'auto', cursor: 'pointer' }} onClick={this.handleForgotPassword}>Forgot password?</p>\n                </div>\n              }\n\n              <div style={{ marginTop: '1em' }}>\n                { mode === 'sign-up'\n                  ? <div>Already have an account? <a href='#sign-in'>Sign in</a></div>\n                  : <div>Or, <a href='#sign-up'>create an account</a></div>\n                }\n              </div>\n            </form>\n          </div>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nUserForm.propTypes = {\n  mode: string,\n  lastUsedUsername: string,\n  handleSignIn: func\n}\n","import React, { Component } from 'react'\nimport { string, object, func } from 'prop-types'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser } from '@fortawesome/free-solid-svg-icons/faUser'\nimport { faBars } from '@fortawesome/free-solid-svg-icons/faBars'\nimport { faChartLine } from '@fortawesome/free-solid-svg-icons/faChartLine'\nimport { faFileAlt } from '@fortawesome/free-regular-svg-icons/faFileAlt'\nimport { faUsers } from '@fortawesome/free-solid-svg-icons/faUsers'\nimport { faDownload } from '@fortawesome/free-solid-svg-icons/faDownload'\nimport { faUpload } from '@fortawesome/free-solid-svg-icons/faUpload'\nimport './NavBar.css'\n\nexport default class NavBar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      menuOpen: false\n    }\n\n    this.menuWrapperRef = React.createRef()\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside)\n  }\n\n  // https://stackoverflow.com/questions/32553158/detect-click-outside-react-component\n  handleClickOutside = (e) => {\n    const { menuOpen } = this.state\n    if (!menuOpen) return\n    if (this.menuWrapperRef && !this.menuWrapperRef.current.contains(e.target)) {\n      this.setState({ menuOpen: false })\n    }\n  }\n\n  handleToggleMenu = () => {\n    this.setState(state => ({ menuOpen: !state.menuOpen }))\n  }\n\n  handleSignOut = async () => {\n    const lastUsedUsername = this.props.user && this.props.user.username\n\n    if (window.confirm('Are you sure you want to sign out?')) {\n      try {\n        await window.userbase.signOut()\n        this.props.handleResetState(lastUsedUsername)\n      } catch {\n        // swallow error\n      }\n    }\n  }\n\n  render() {\n    const { mode, user } = this.props\n    const { menuOpen } = this.state\n\n    return (\n      <div className='topnav-container fixed'>\n\n        <ul className='topnav max-screen-width'>\n\n          <li className={'dropdown' + (menuOpen ? ' active': '')} ref={this.menuWrapperRef} id='topnav-dropdown-menu'>\n            <div className='dropbtn' onClick={this.handleToggleMenu}><FontAwesomeIcon icon={faBars} /></div>\n            <div className='dropdown-content'>\n              <div className='dropdown-item' onClick={() => window.location.href = '#account'}><div style={{ textDecoration: 'underline' }}>{user.username}<span className='float-right'><FontAwesomeIcon icon={faUser} /></span></div></div>\n              <div className='dropdown-divider' />\n              <div className='dropdown-item' onClick={this.props.handleDownloadData}>Download all of your data<span className='float-right'><FontAwesomeIcon icon={faDownload} /></span></div>\n              <div className='dropdown-item' onClick={this.props.handleImportData}>Restore your data from download<span style={{ marginLeft: '2em' }} className='float-right'><FontAwesomeIcon icon={faUpload} /></span></div>\n              <div className='dropdown-divider' />\n              <div className='dropdown-item' onClick={() => window.location.href = 'mailto:support@prinvoice.com'}>Contact support@prinvoice.com</div>\n              <div className='dropdown-divider' />\n              <div className='dropdown-item dangerous-hover' onClick={this.handleSignOut}>Sign out</div>\n            </div>\n          </li>\n\n          <li className='desktop-topnav-item'><a className={'topnav-item' + (mode === 'dashboard' ? ' active' : '')} href='#dashboard'>DASHBOARD</a></li>\n          <li className='desktop-topnav-item'><a className={'topnav-item' + (mode === 'invoices' ? ' active' : '')} href='#invoices'>INVOICES</a></li>\n          <li className='desktop-topnav-item'><a className={'topnav-item' + (mode === 'customers' ? ' active' : '')} href='#customers'>CUSTOMERS</a></li>\n\n          <li className='mobile-nav-bar-items'>\n            <button className={'mobile-nav-bar-item ' + (mode === 'dashboard' ? ' active' : '')} onClick={() => window.location.href ='#dashboard'}>\n              <FontAwesomeIcon icon={faChartLine} />\n            </button>\n            <button className={'mobile-nav-bar-item ' + (mode === 'invoices' ? ' active' : '')} onClick={() => window.location.href ='#invoices'}>\n              <FontAwesomeIcon icon={faFileAlt} />\n            </button>\n            <button className={'mobile-nav-bar-item ' + (mode === 'customers' ? ' active' : '')} onClick={() => window.location.href ='#customers'}>\n              <FontAwesomeIcon icon={faUsers} />\n            </button>\n          </li>\n\n          <li id='new-invoice-button-wrapper' className='right'>\n            <button className='button-inverted nav-button left-button-with-icon' onClick={() => window.location.href ='#new-invoice'}>NEW INVOICE</button>\n            <button className='button-inverted nav-button right-button-with-icon' onClick={() => window.location.href ='#new-invoice'}>\n\n              {/* importing the svg casues flicker in safari/iOS on rerender,just copy pasted the svg */}\n              {/* <img className='button-icon' src={newInvoiceIcon} alt='new-invoice'></img> */}\n              <svg className='button-icon' width=\"98\" height=\"116\" viewBox=\"0 0 98 116\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <rect width=\"96.875\" height=\"115.625\" transform=\"translate(0.75 0.125)\" fill=\"#32363c\"/>\n                <rect x=\"8.5625\" y=\"14.1875\" width=\"71.875\" height=\"93.75\" stroke=\"#C6C386\" strokeWidth=\"3.125\"/>\n                <rect x=\"63.25\" y=\"6.375\" width=\"25\" height=\"25\" fill=\"#32363c\"/>\n                <line x1=\"69.5\" y1=\"14.1653\" x2=\"91.375\" y2=\"14.1653\" stroke=\"#C3EEE7\" strokeWidth=\"3.16933\"/>\n                <path d=\"M54.3041 69.2584C54.3041 71.3875 53.6479 73.1521 52.3354 74.5521C51.0229 75.9521 49.1854 76.8271 46.8229 77.1771C46.7062 77.1771 46.6479 77.2355 46.6479 77.3521L46.6916 80.5896C46.6916 80.8813 46.5458 81.0271 46.2541 81.0271H44.3291C44.0375 81.0271 43.8916 80.8813 43.8916 80.5896L43.9354 77.4834C43.9354 77.3667 43.877 77.3084 43.7604 77.3084C40.902 77.1625 38.6562 76.3605 37.0229 74.9021C35.3895 73.4146 34.5729 71.4896 34.5729 69.1271V67.7709C34.5729 67.4792 34.7187 67.3334 35.0104 67.3334H36.9791C37.2708 67.3334 37.4166 67.4792 37.4166 67.7709V68.9521C37.4166 70.6438 38.0729 72.0146 39.3854 73.0646C40.727 74.0855 42.5645 74.5959 44.8979 74.5959C46.9979 74.5959 48.602 74.1292 49.7104 73.1959C50.8187 72.2334 51.3729 70.9646 51.3729 69.3896C51.3729 68.3688 51.1104 67.4938 50.5854 66.7646C50.0895 66.0355 49.3166 65.35 48.2666 64.7084C47.2166 64.0667 45.7145 63.323 43.7604 62.4771C41.6604 61.6021 40.0416 60.8438 38.9041 60.2021C37.7958 59.5313 36.877 58.6855 36.1479 57.6646C35.4479 56.6146 35.0979 55.3021 35.0979 53.7271C35.0979 51.3646 35.8416 49.5125 37.3291 48.1709C38.8458 46.8 40.9312 46.0709 43.5854 45.9834C43.702 45.9834 43.7604 45.925 43.7604 45.8084L43.7166 42.4396C43.7166 42.148 43.8625 42.0021 44.1541 42.0021H46.0354C46.327 42.0021 46.4729 42.148 46.4729 42.4396L46.4291 45.9834C46.4291 46.1 46.4875 46.173 46.6041 46.2021C48.9375 46.5813 50.7604 47.4855 52.0729 48.9146C53.4145 50.3438 54.0854 52.1375 54.0854 54.2959V55.2584C54.0854 55.55 53.9395 55.6959 53.6479 55.6959H51.5916C51.3 55.6959 51.1541 55.55 51.1541 55.2584V54.4709C51.1541 52.7792 50.527 51.3938 49.2729 50.3146C48.0187 49.2355 46.2833 48.6959 44.0666 48.6959C42.1125 48.6959 40.6104 49.1188 39.5604 49.9646C38.5104 50.8105 37.9854 52.0355 37.9854 53.6396C37.9854 54.6896 38.2333 55.5646 38.7291 56.2646C39.2541 56.9355 39.9833 57.5334 40.9166 58.0584C41.8791 58.5542 43.352 59.2105 45.3354 60.0271C47.3479 60.9021 48.9666 61.7188 50.1916 62.4771C51.4458 63.2355 52.4375 64.1688 53.1666 65.2771C53.925 66.3563 54.3041 67.6834 54.3041 69.2584Z\" fill=\"#C3EEE7\"/>\n                <path d=\"M80.4374 25.1251V3.25014\" stroke=\"#C3EEE7\" strokeWidth=\"3.125\"/>\n              </svg>\n            </button>\n          </li>\n        </ul>\n\n      </div>\n    )\n  }\n}\n\nNavBar.propTypes = {\n  mode: string,\n  user: object,\n  handleResetState: func,\n  handleDownloadData: func,\n  handleImportData: func\n}\n","import React from 'react'\nimport { saveAs } from 'file-saver'\n\n// https://github.com/bengourley/currency-symbol-map\nexport const currencySymbolMap = {\n  'AED': 'د.إ',\n  'AFN': '؋',\n  'ALL': 'L',\n  'AMD': '֏',\n  'ANG': 'ƒ',\n  'AOA': 'Kz',\n  'ARS': '$',\n  'AUD': '$',\n  'AWG': 'ƒ',\n  'AZN': '₼',\n  'BAM': 'KM',\n  'BBD': '$',\n  'BDT': '৳',\n  'BGN': 'лв',\n  'BHD': '.د.ب',\n  'BIF': 'FBu',\n  'BMD': '$',\n  'BND': '$',\n  'BOB': '$b',\n  'BRL': 'R$',\n  'BSD': '$',\n  'BTC': '฿',\n  'BTN': 'Nu.',\n  'BWP': 'P',\n  'BYR': 'Br',\n  'BYN': 'Br',\n  'BZD': 'BZ$',\n  'CAD': '$',\n  'CDF': 'FC',\n  'CHF': 'CHF',\n  'CLP': '$',\n  'CNY': '¥',\n  'COP': '$',\n  'CRC': '₡',\n  'CUC': '$',\n  'CUP': '₱',\n  'CVE': '$',\n  'CZK': 'Kč',\n  'DJF': 'Fdj',\n  'DKK': 'kr',\n  'DOP': 'RD$',\n  'DZD': 'دج',\n  'EEK': 'kr',\n  'EGP': '£',\n  'ERN': 'Nfk',\n  'ETB': 'Br',\n  'ETH': 'Ξ',\n  'EUR': '€',\n  'FJD': '$',\n  'FKP': '£',\n  'GBP': '£',\n  'GEL': '₾',\n  'GGP': '£',\n  'GHC': '₵',\n  'GHS': 'GH₵',\n  'GIP': '£',\n  'GMD': 'D',\n  'GNF': 'FG',\n  'GTQ': 'Q',\n  'GYD': '$',\n  'HKD': '$',\n  'HNL': 'L',\n  'HRK': 'kn',\n  'HTG': 'G',\n  'HUF': 'Ft',\n  'IDR': 'Rp',\n  'ILS': '₪',\n  'IMP': '£',\n  'INR': '₹',\n  'IQD': 'ع.د',\n  'IRR': '﷼',\n  'ISK': 'kr',\n  'JEP': '£',\n  'JMD': 'J$',\n  'JOD': 'JD',\n  'JPY': '¥',\n  'KES': 'KSh',\n  'KGS': 'лв',\n  'KHR': '៛',\n  'KMF': 'CF',\n  'KPW': '₩',\n  'KRW': '₩',\n  'KWD': 'KD',\n  'KYD': '$',\n  'KZT': 'лв',\n  'LAK': '₭',\n  'LBP': '£',\n  'LKR': '₨',\n  'LRD': '$',\n  'LSL': 'M',\n  'LTC': 'Ł',\n  'LTL': 'Lt',\n  'LVL': 'Ls',\n  'LYD': 'LD',\n  'MAD': 'MAD',\n  'MDL': 'lei',\n  'MGA': 'Ar',\n  'MKD': 'ден',\n  'MMK': 'K',\n  'MNT': '₮',\n  'MOP': 'MOP$',\n  'MRO': 'UM',\n  'MRU': 'UM',\n  'MUR': '₨',\n  'MVR': 'Rf',\n  'MWK': 'MK',\n  'MXN': '$',\n  'MYR': 'RM',\n  'MZN': 'MT',\n  'NAD': '$',\n  'NGN': '₦',\n  'NIO': 'C$',\n  'NOK': 'kr',\n  'NPR': '₨',\n  'NZD': '$',\n  'OMR': '﷼',\n  'PAB': 'B/.',\n  'PEN': 'S/.',\n  'PGK': 'K',\n  'PHP': '₱',\n  'PKR': '₨',\n  'PLN': 'zł',\n  'PYG': 'Gs',\n  'QAR': '﷼',\n  'RMB': '￥',\n  'RON': 'lei',\n  'RSD': 'Дин.',\n  'RUB': '₽',\n  'RWF': 'R₣',\n  'SAR': '﷼',\n  'SBD': '$',\n  'SCR': '₨',\n  'SDG': 'ج.س.',\n  'SEK': 'kr',\n  'SGD': '$',\n  'SHP': '£',\n  'SLL': 'Le',\n  'SOS': 'S',\n  'SRD': '$',\n  'SSP': '£',\n  'STD': 'Db',\n  'STN': 'Db',\n  'SVC': '$',\n  'SYP': '£',\n  'SZL': 'E',\n  'THB': '฿',\n  'TJS': 'SM',\n  'TMT': 'T',\n  'TND': 'د.ت',\n  'TOP': 'T$',\n  'TRL': '₤',\n  'TRY': '₺',\n  'TTD': 'TT$',\n  'TVD': '$',\n  'TWD': 'NT$',\n  'TZS': 'TSh',\n  'UAH': '₴',\n  'UGX': 'USh',\n  'USD': '$',\n  'UYU': '$U',\n  'UZS': 'лв',\n  'VEF': 'Bs',\n  'VND': '₫',\n  'VUV': 'VT',\n  'WST': 'WS$',\n  'XAF': 'FCFA',\n  'XBT': 'Ƀ',\n  'XCD': '$',\n  'XOF': 'CFA',\n  'XPF': '₣',\n  'YER': '﷼',\n  'ZAR': 'R',\n  'ZWD': 'Z$'\n}\n\n// YYYY-MM-DD\nexport const toUniversalDateFormat = (date) => new Date(date).toLocaleDateString('fr-CA', {\n  year: 'numeric',\n  month: '2-digit',\n  day: '2-digit'\n})\n\n// YYYY-MM-DD\n// [4 digits]-(either (0 and [1 through 9]), or (1 and [0 through 2]))-(either (0 and [1 through 9]), or ([1 or 2] and [0 through 9], or (3 and [0 through 1])))\nexport const dateFormatRegex = '^\\\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$'\n\n// https://stackoverflow.com/questions/563406/add-days-to-javascript-date\nexport const addDaysToDate = (date, days) => {\n  const result = new Date(date)\n  result.setDate(result.getDate() + days)\n  return result\n}\n\nexport const numberToNumberString = (number, decimals = 2) => Number(number.toFixed(2)).toLocaleString(undefined, {\n  minimumFractionDigits: decimals,\n  maximumFractionDigits: decimals\n})\n\n// https://stackoverflow.com/questions/1353684/detecting-an-invalid-date-date-instance-in-javascript\nexport const isValidDate = (date) => date instanceof Date && !isNaN(date)\n\n// http://emailregex.com/\nexport const isValidEmail = (email) => /^(([^<>()\\\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)\n\nexport const getSpanWithTextHighlighted = (string, searchValue) => {\n  if (!searchValue) return string\n\n  const text = []\n  let str = string\n\n  while (str.length > 0) {\n    const highlightIndex = str.toLowerCase().indexOf(searchValue.toLowerCase())\n\n    if (highlightIndex !== -1) {\n      text.push(<span key={Math.random()}>{str.substring(0, highlightIndex)}</span>)\n      text.push(<span className='bold' key={Math.random()}>{str.substring(highlightIndex, highlightIndex + searchValue.length)}</span>)\n      str = str.substring(highlightIndex + searchValue.length, str.length)\n    } else {\n      text.push(<span key={Math.random()}>{str.substring(0, str.length)}</span>)\n      str = ''\n    }\n  }\n\n  return text\n}\n\nconst _getYearAndMonth = (date, monthsDiffFromMonthProvided) => {\n  const year = date.getFullYear()\n  const monthProvided = date.getMonth()\n  const month = monthProvided + monthsDiffFromMonthProvided\n  return { year, month }\n}\n\nconst _getBeginningOfDay = (date) => {\n  const hours = 0\n  const mins = 0\n  const secs = 0\n  const ms = 0\n  const newDate = new Date(date)\n  newDate.setHours(hours, mins, secs, ms)\n  return newDate\n}\n\nconst _getEndOfDay = (date) => {\n  const hours = 23\n  const mins = 59\n  const secs = 59\n  const ms = 999\n  const newDate = new Date(date)\n  newDate.setHours(hours, mins, secs, ms)\n  return newDate\n}\n\nexport const getFirstDayOfMonth = (date, monthsDiffFromMonthProvided = 0) => {\n  const { year, month } = _getYearAndMonth(date, monthsDiffFromMonthProvided)\n  const firstDayOfMonth = 1\n  const dateOfFirstDayOfMonth = new Date(year, month, firstDayOfMonth)\n  return _getBeginningOfDay(dateOfFirstDayOfMonth)\n}\n\n// https://www.encodedna.com/javascript/first-and-last-day-of-a-given-month-in-javascript.htm\nexport const getLastDayOfMonth = (date, monthsDiffFromMonthProvided = 0) => {\n  const { year, month } = _getYearAndMonth(date, monthsDiffFromMonthProvided)\n  const theNextMonth = month + 1\n  const oneDayBeforeTheNextMonth = 0 // i.e. last day of month desired\n  const lastDayOfMonth = new Date(year, theNextMonth, oneDayBeforeTheNextMonth)\n  return _getEndOfDay(lastDayOfMonth)\n}\n\nexport const getMonthAsString = date => date.toLocaleString('en-us', { month: 'short' })\n\nexport const downloadFileLocally = (file) => {\n  // workaround for Chrome iOS:\n  // https://github.com/eligrey/FileSaver.js/issues/179\n  if(!navigator.userAgent.match('CriOS')) {\n    saveAs(file, file.name)\n  } else {\n    const reader = new FileReader()\n    reader.onload = () => window.location.href = reader.result\n    reader.readAsDataURL(file)\n  }\n}\n\n/**\n* Presents the file chooser to the user to pick a file to download.\n* When the user chooses the file, the handleReceiveFile function\n* is called with the file passed as the only argument. The\n* handleReceiveFile enables a React component to do what it\n* wants with the file.\n*/\nexport const importFile = (fileExtension, handleImportedFile) => {\n  const input = window.document.createElement('input')\n  input.type = 'file'\n  input.accept = fileExtension\n  input.style.opacity = '0'\n  input.onchange = (e) => {\n    handleImportedFile(e.target.files[0])\n    document.body.removeChild(input) // race condition prevents on change from firing on iOS\n  }\n  document.body.appendChild(input)\n  input.click()\n}\n\nexport const readFile = (file) => new Promise((resolve, reject) => {\n  const reader = new FileReader()\n  reader.onload = async (e) => resolve(e.target.result)\n  reader.onerror = (e) => reject(e)\n  reader.readAsArrayBuffer(file)\n})\n\nexport const flatten = (array) => [].concat(...array)","import React from 'react'\nimport { Document, Page, Text, View } from '@react-pdf/renderer'\nimport {\n  isValidDate,\n  numberToNumberString,\n  currencySymbolMap\n} from '../../utils'\nimport {\n  getSubtotal,\n  getSubtotalAfterDiscount,\n  getTax,\n  getTotal,\n  getItemAmount\n} from './logic'\n\nconst medFontSize = 14\nconst largeFontSize = 16\n\nconst COLUMN_1_WIDTH = 45\nconst COLUMN_2_WIDTH = 16\nconst COLUMN_3_WIDTH = 17\nconst COLUMN_4_WIDTH = 22\n\nconst COLUMN_1_WIDTH_PERCENT = `${COLUMN_1_WIDTH}%`\nconst COLUMN_2_WIDTH_PERCENT = `${COLUMN_2_WIDTH}%`\nconst COLUMN_3_WIDTH_PERCENT = `${COLUMN_3_WIDTH}%`\nconst COLUMN_4_WIDTH_PERCENT = `${COLUMN_4_WIDTH}%`\n\nconst TEXT_PADDING = 3\n\nconst InvoicePdf = (props) => {\n  const { invoice } = props\n  const {\n    uuid,\n    payee,\n    payor,\n    currency,\n    items,\n    discount,\n    taxPercent,\n    shipping,\n    note,\n  } = invoice\n\n  const dateIssued = invoice.dateIssued && isValidDate(new Date(invoice.dateIssued))\n    ? new Date(invoice.dateIssued).toLocaleDateString()\n    : ''\n\n  const dateDue = invoice.dateDue && isValidDate(new Date(invoice.dateDue))\n    ? new Date(invoice.dateDue).toLocaleDateString()\n    : ''\n\n  const datePaid = invoice.datePaid && isValidDate(new Date(invoice.datePaid))\n    ? new Date(invoice.datePaid).toLocaleDateString()\n    : false\n\n  const subtotal = getSubtotal(items)\n  const subtotalAfterDiscount = getSubtotalAfterDiscount(subtotal, discount)\n  const tax = getTax(taxPercent, subtotalAfterDiscount)\n  const total = getTotal(subtotalAfterDiscount, tax, shipping)\n\n  const discountDisplay = (discount > 0 && !isNaN(Number(discount)))\n    ? numberToNumberString(Number(discount))\n    : numberToNumberString(0)\n\n  const shippingDisplay = (shipping > 0 && !isNaN(Number(shipping)))\n    ? numberToNumberString(Number(shipping))\n    : numberToNumberString(0)\n\n  return (\n    <Document subject={JSON.stringify(invoice)}>\n      <Page size=\"A4\">\n        <View\n          style={{\n            padding: '1in'\n          }}\n        >\n\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flexDirection: 'column', width: '25%' }}>\n              <Text style={{ fontSize: 27 }}>\n                INVOICE\n              </Text>\n            </View>\n\n            <View style={{ flexDirection: 'column', width: '75%', textAlign: 'right' }}>\n              <Text style={{ fontSize: medFontSize }}>\n                {`${payee.name}`}\n              </Text>\n\n              <Text style={{ fontSize: medFontSize }}>\n                {`${payee.email}`}\n              </Text>\n            </View>\n          </View>\n\n          <View style={{ flexDirection: 'row', marginTop: '30px' }}>\n\n            { datePaid\n              && (\n                <View style={{ flexDirection: 'column', width: '15%', textAlign: 'left' }}>\n                  <Text style={{ fontSize: largeFontSize, color: 'red' }}>\n                    PAID\n                  </Text>\n                </View>\n              )\n            }\n\n            { datePaid\n              && (\n                <View style={{ flexDirection: 'column', width: '20%', textAlign: 'right' }}>\n                  <Text style={{ fontSize: largeFontSize, color: 'red' }}>\n                    { datePaid }\n                  </Text>\n                </View>\n              )\n            }\n\n            <View style={{ flexDirection: 'column', width: datePaid ? '65%' : '100%', textAlign: 'right' }}>\n              <Text style={{ fontSize: largeFontSize }}>\n                BILL TO\n              </Text>\n            </View>\n\n          </View>\n\n          <View style={{ flexDirection: 'row', marginTop: '40px' }}>\n            <View style={{ flexDirection: 'column', width: '15%' }}>\n              <Text style={{ fontSize: medFontSize }}>\n                ISSUED\n              </Text>\n              <Text style={{ fontSize: medFontSize }}>\n                DUE\n              </Text>\n              <Text style={{ fontSize: medFontSize }}>\n                ID\n              </Text>\n            </View>\n\n            <View style={{ flexDirection: 'column', width: '20%', textAlign: 'right' }}>\n              <Text style={{ fontSize: medFontSize }}>\n                { dateIssued }\n              </Text>\n              <Text style={{ fontSize: medFontSize }}>\n                { dateDue }\n              </Text>\n              <Text style={{ fontSize: medFontSize }}>\n                { uuid.substring(0, 8) }\n              </Text>\n            </View>\n\n            <View style={{ flexDirection: 'column', width: '65%', textAlign: 'right' }}>\n              <Text style={{ fontSize: medFontSize }}>\n                {payor.name}\n              </Text>\n\n              { payor.email\n                && (\n                  <View>\n                    <Text style={{ fontSize: medFontSize }}>\n                      { payor.email }\n                    </Text>\n                  </View>\n                )\n              }\n            </View>\n\n          </View>\n\n          <View style={{ marginTop: '80px', fontSize: medFontSize }}>\n\n            {/* TABLE HEADER */}\n            <View\n              style={{\n                flexDirection: 'row',\n                lineHeight: '14px',\n              }}\n            >\n              <View\n                style={{\n                  padding: TEXT_PADDING,\n                  flexDirection: 'column',\n                  width: COLUMN_1_WIDTH_PERCENT,\n                  textAlign: 'left',\n                  backgroundColor: 'black',\n                }}\n              >\n                <Text style={{ color: 'white' }}>\n                  Item\n                </Text>\n              </View>\n\n              <View\n                style={{\n                  padding: TEXT_PADDING,\n                  flexDirection: 'column',\n                  width: COLUMN_2_WIDTH_PERCENT,\n                  textAlign: 'right',\n                  backgroundColor: 'black',\n                }}\n              >\n                <Text style={{ color: 'white' }}>\n                  Quantity\n                </Text>\n              </View>\n\n              <View\n                style={{\n                  padding: TEXT_PADDING,\n                  flexDirection: 'column',\n                  width: COLUMN_3_WIDTH_PERCENT,\n                  textAlign: 'right',\n                  backgroundColor: 'black',\n                }}\n              >\n                <Text style={{ color: 'white' }}>\n                  Price\n                </Text>\n              </View>\n\n              <View\n                style={{\n                  padding: TEXT_PADDING,\n                  flexDirection: 'column',\n                  width: COLUMN_4_WIDTH_PERCENT,\n                  textAlign: 'right',\n                  backgroundColor: 'black',\n                }}\n              >\n                <Text style={{ color: 'white' }}>\n                  Amount\n                </Text>\n              </View>\n            </View>\n\n            {/* TABLE ITEMS */}\n            {\n              items.map((item, i) => {\n                const {\n                  quantity,\n                  unitPrice,\n                } = item\n\n                if (quantity < 0 || unitPrice < 0 || isNaN(Number(quantity)) || isNaN(Number(unitPrice))) return null\n\n                return (\n                  <View\n                    style={{\n                      flexDirection: 'row',\n                      lineHeight: '12px',\n                      marginTop: '8px',\n                      fontSize: medFontSize,\n                    }}\n                    key={i}\n                  >\n\n                    <View\n                      style={{\n                        padding: TEXT_PADDING,\n                        flexDirection: 'column',\n                        width: COLUMN_1_WIDTH_PERCENT,\n                        textAlign: 'left',\n                      }}\n                    >\n                      <Text style={{ color: 'black' }}>\n                        {item.name}\n                      </Text>\n                    </View>\n\n                    <View\n                      style={{\n                        padding: TEXT_PADDING,\n                        flexDirection: 'column',\n                        width: COLUMN_2_WIDTH_PERCENT,\n                        textAlign: 'right',\n                      }}\n                    >\n                      <Text style={{ color: 'black' }}>\n                        {item.quantity}\n                      </Text>\n                    </View>\n\n                    <View\n                      style={{\n                        padding: TEXT_PADDING,\n                        flexDirection: 'column',\n                        width: COLUMN_3_WIDTH_PERCENT,\n                        textAlign: 'right',\n                      }}\n                    >\n                      <Text style={{ color: 'black' }}>\n                        { numberToNumberString(Number(item.unitPrice)) }\n                      </Text>\n                    </View>\n\n                    <View\n                      style={{\n                        padding: TEXT_PADDING,\n                        flexDirection: 'column',\n                        width: COLUMN_4_WIDTH_PERCENT,\n                        textAlign: 'right',\n                      }}\n                    >\n                      <Text style={{ color: 'black' }}>\n                        { currencySymbolMap[currency] + numberToNumberString(getItemAmount(item)) }\n                      </Text>\n                    </View>\n\n                  </View>\n                )\n              })\n            }\n\n            {/* TABLE FOOTER */}\n            <View\n              style={{\n                // this and the next view are used to create a double border\n                flexDirection: 'row',\n                backgroundColor: 'black',\n                marginTop: 5,\n                height: 1,\n                width: `${COLUMN_2_WIDTH + COLUMN_3_WIDTH + COLUMN_4_WIDTH}%`,\n                marginLeft: `${COLUMN_1_WIDTH}%`\n              }}\n            />\n            <View\n              style={{\n                flexDirection: 'row',\n                backgroundColor: 'black',\n                marginTop: 1,\n                marginBottom: 5,\n                height: 1,\n                width: `${COLUMN_2_WIDTH + COLUMN_3_WIDTH + COLUMN_4_WIDTH}%`,\n                marginLeft: `${COLUMN_1_WIDTH}%`\n              }}\n            />\n\n            { (discount || taxPercent || shipping || null) && <View\n              style={{\n                flexDirection: 'row',\n                lineHeight: '14px',\n              }}\n            >\n              <View\n                style={{\n                  padding: TEXT_PADDING,\n                  flexDirection: 'column',\n                  width: `${COLUMN_1_WIDTH + COLUMN_2_WIDTH + COLUMN_3_WIDTH}%`,\n                  textAlign: 'right',\n                }}\n              >\n                <Text>\n                  SUBTOTAL\n                </Text>\n              </View>\n\n              <View\n                style={{\n                  padding: TEXT_PADDING,\n                  flexDirection: 'column',\n                  width: COLUMN_4_WIDTH_PERCENT,\n                  textAlign: 'right',\n                }}\n              >\n                <Text>\n                  { currencySymbolMap[currency] + numberToNumberString(subtotal) }\n                </Text>\n              </View>\n            </View>\n            }\n\n            { (discount || null)\n              && (\n                <View\n                  style={{\n                    flexDirection: 'row',\n                    lineHeight: '14px',\n                  }}\n                >\n                  <View\n                    style={{\n                      padding: TEXT_PADDING,\n                      flexDirection: 'column',\n                      width: `${COLUMN_1_WIDTH + COLUMN_2_WIDTH + COLUMN_3_WIDTH}%`,\n                      textAlign: 'right',\n                    }}\n                  >\n                    <Text>\n                      DISCOUNT\n                    </Text>\n                  </View>\n\n                  <View\n                    style={{\n                      padding: TEXT_PADDING,\n                      flexDirection: 'column',\n                      width: COLUMN_4_WIDTH_PERCENT,\n                      textAlign: 'right',\n                    }}\n                  >\n                    <Text>\n                      { currencySymbolMap[currency] + discountDisplay }\n                    </Text>\n                  </View>\n                </View>\n            )}\n\n            { (taxPercent || null) && (\n              <View\n              style={{\n                flexDirection: 'row',\n                lineHeight: '14px',\n              }}\n            >\n                <View\n                style={{\n                  padding: TEXT_PADDING,\n                  flexDirection: 'column',\n                  width: `${COLUMN_1_WIDTH + COLUMN_2_WIDTH + COLUMN_3_WIDTH}%`,\n                  textAlign: 'right',\n                }}\n              >\n                  <Text>\n                    TAX ({taxPercent}%)\n                  </Text>\n                </View>\n\n                <View\n                style={{\n                  padding: TEXT_PADDING,\n                  flexDirection: 'column',\n                  width: COLUMN_4_WIDTH_PERCENT,\n                  textAlign: 'right',\n                }}\n              >\n                  <Text>\n                    { currencySymbolMap[currency] + numberToNumberString(tax) }\n                  </Text>\n                </View>\n              </View>\n            )}\n\n            {(shipping || null) && (\n              <View\n                  style={{\n                    flexDirection: 'row',\n                    lineHeight: '14px',\n                  }}\n                >\n                <View\n                    style={{\n                      padding: TEXT_PADDING,\n                      flexDirection: 'column',\n                      width: `${COLUMN_1_WIDTH + COLUMN_2_WIDTH + COLUMN_3_WIDTH}%`,\n                      textAlign: 'right',\n                    }}\n                  >\n                  <Text>\n                    SHIPPING\n                  </Text>\n                </View>\n\n                <View\n                    style={{\n                      padding: TEXT_PADDING,\n                      flexDirection: 'column',\n                      width: COLUMN_4_WIDTH_PERCENT,\n                      textAlign: 'right',\n                    }}\n                  >\n                  <Text>\n                    { currencySymbolMap[currency] + shippingDisplay }\n                  </Text>\n                </View>\n              </View>\n            )}\n\n            <View\n              style={{\n                flexDirection: 'row',\n                lineHeight: '14px',\n              }}\n            >\n              <View\n                style={{\n                  padding: TEXT_PADDING,\n                  flexDirection: 'column',\n                  width: `${COLUMN_1_WIDTH}%`,\n                  textAlign: 'left',\n                  marginTop: (discount || taxPercent || shipping) ? '0' : '28px'\n                }}\n              >\n                <Text>\n                  {note}\n                </Text>\n              </View>\n\n              <View\n                style={{\n                  padding: TEXT_PADDING,\n                  flexDirection: 'column',\n                  width: `${COLUMN_2_WIDTH + COLUMN_3_WIDTH}%`,\n                  textAlign: 'right',\n                }}\n              >\n                <Text>\n                  TOTAL\n                </Text>\n              </View>\n\n              <View\n                style={{\n                  padding: TEXT_PADDING,\n                  flexDirection: 'column',\n                  width: COLUMN_4_WIDTH_PERCENT,\n                  textAlign: 'right',\n                }}\n              >\n                <Text>\n                  { currencySymbolMap[currency] + numberToNumberString(total) }\n                </Text>\n              </View>\n            </View>\n          </View>\n\n        </View>\n\n      </Page>\n    </Document>\n  )\n}\n\nexport default InvoicePdf\n","export const setCreatedDateOnSqlStatements = (sqlStatements) => {\n  const createdDate = new Date().toISOString()\n  return sqlStatements.map((sqlStatement) => {\n    const { sql, bindValues } = sqlStatement\n    return {\n      sql,\n      bindValues: {\n        ...bindValues,\n        $created_date: createdDate\n      }\n    }\n  })\n}\n\nexport const getSqlRows = (sqlJsDb, sql) => {\n  const rows = []\n\n  const stmt = sqlJsDb.prepare(sql)\n  while (stmt.step()) {\n    rows.push(stmt.getAsObject())\n  }\n\n  stmt.free()\n  return rows\n}\n\n// if 3 columns and 2 rows, returns string: \"(?, ?, ?),(?, ?, ?)\"\nexport const getBindValuePlaceholders = (columns, rows) => {\n  const singleBindValues = []\n  singleBindValues.length = columns.length\n  const singleBindValuesString = `(${singleBindValues.fill('?')})`\n\n  const allBindValues = []\n  allBindValues.length = rows.length\n  return allBindValues.fill(singleBindValuesString).toString()\n}\n","import React from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport BigNumber from 'bignumber.js'\nimport { pdf as reactPdf } from '@react-pdf/renderer'\nimport InvoicePdf from './InvoicePdf'\nimport { USERBASE_DATABASE_NAME, DEFAULT_CURRENCY } from '../../config'\nimport {\n  addDaysToDate,\n  isValidDate,\n  isValidEmail,\n  currencySymbolMap,\n  numberToNumberString,\n  downloadFileLocally,\n} from '../../utils'\nimport {\n  setCreatedDateOnSqlStatements,\n  getSqlRows,\n} from '../../database/utils'\n\nclass DetailedErrors extends Error {\n  constructor(errors, errorMap) {\n    super()\n    this.errors = errors\n    this.errorMap = errorMap\n  }\n}\n\nexport const newEmptyInvoice = (sqlJsDb, user) => {\n  const userDefaults = { ...getUserDefaults(sqlJsDb, user.userId) }\n  const { name, currency } = userDefaults\n\n  return {\n    uuid: uuidv4(),\n    dateIssued: new Date(),\n    dateDue: addDaysToDate(new Date(), 28),\n    items: [newEmptyInvoiceItem()],\n    payor: { uuid: uuidv4() },\n    payee: { ...user, name: name || '' },\n    currency: currency || DEFAULT_CURRENCY,\n    discount: 0,\n    taxPercent: 0,\n    shipping: 0,\n    note: '',\n  }\n}\n\nexport const newEmptyInvoiceItem = () => ({\n  resourceUuid: uuidv4(),\n  name: '',\n  quantity: 1,\n  unitPrice: 0\n})\n\nexport const getItemAmount = (item) => {\n  return (item.quantity <= 0 || item.unitPrice <= 0 || isNaN(Number(item.quantity)) || isNaN(Number(item.unitPrice)))\n    ? new BigNumber(0)\n    : new BigNumber(item.quantity).multipliedBy(new BigNumber(item.unitPrice))\n}\n\nexport const getSubtotal = (items) => {\n  let subtotal = new BigNumber(0)\n  for (let i = 0; i < items.length; i++) {\n    const itemAmount = getItemAmount(items[i])\n    if (itemAmount.isPositive()) subtotal = subtotal.plus(itemAmount)\n  }\n  return subtotal\n}\n\nexport const getSubtotalAfterDiscount = (subtotal, discount) => {\n  const discountBigNumber = (discount > 0 && !isNaN(Number(discount)))\n    ? new BigNumber(discount)\n    : new BigNumber(0)\n\n  const afterDiscount = subtotal.minus(discountBigNumber)\n  return afterDiscount.isNegative()\n    ? new BigNumber(0)\n    : afterDiscount\n}\n\nexport const getTax = (taxPercent, subtotalAfterDiscount) => {\n  if (taxPercent <= 0 || isNaN(Number(taxPercent))) {\n    return new BigNumber(0)\n  } else {\n    const taxPercentBigNumber = new BigNumber(taxPercent).dividedBy(100)\n    return subtotalAfterDiscount.multipliedBy(taxPercentBigNumber)\n  }\n}\n\nexport const getTotal = (subtotalAfterDiscount, tax, shipping) => {\n  const shippingBigNumber = (shipping > 0 && !isNaN(Number(shipping)))\n    ? new BigNumber(shipping)\n    : new BigNumber(0)\n\n  return subtotalAfterDiscount.plus(tax).plus(shippingBigNumber)\n}\n\nconst _validateInvoiceItems = (items, errors, errorMap) => {\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i]\n    const { resourceUuid, name, quantity, unitPrice } = item\n\n    errorMap.items[resourceUuid] = {}\n\n    const itemNumber = i + 1\n    if (!name) {\n      errors.push(`Item ${itemNumber} is missing an Item name.`)\n      errorMap.items[resourceUuid].name = true\n    }\n\n    if (!quantity && quantity !== 0) {\n      errors.push(`Item ${itemNumber} is missing a Quantity.`)\n      errorMap.items[resourceUuid].quantity = true\n    } else if (quantity <= 0) {\n      errors.push(`Item ${itemNumber} has Quantity less than or equal to 0. Please include a positive quantity.`)\n      errorMap.items[resourceUuid].quantity = true\n    }\n\n    if (!unitPrice && unitPrice !== 0) {\n      errors.push(`Item ${itemNumber} is missing a Price.`)\n      errorMap.items[resourceUuid].unitPrice = true\n    }\n\n    if (unitPrice < 0) {\n      errors.push(`Item ${itemNumber} has Price less than 0. Please include a price greater than or equal to 0.`)\n      errorMap.items[resourceUuid].unitPrice = true\n    }\n  }\n}\n\nexport const validateInvoice = (invoice) => {\n  const errors = []\n  const errorMap = { payee: {}, payor: {}, items: {} }\n\n  const {\n    payee,\n    payor,\n    dateIssued,\n    dateDue,\n    items,\n    discount,\n    taxPercent,\n    shipping,\n  } = invoice\n\n  if (!payee.name) {\n    errors.push('Your name is missing. Please include your name.')\n    errorMap.payee.name = true\n  }\n\n  if (!payor.name) {\n    errors.push('BILL TO name is missing. Please include a name to bill.')\n    errorMap.payor.name = true\n  }\n\n  if (payor.email && !isValidEmail(payor.email)) {\n    errors.push('BILL TO email is invalid. Please enter a valid email address.')\n    errorMap.payor.email = true\n  }\n\n  if (!isValidDate(new Date(dateIssued))) {\n    errors.push('Invalid date issued. Please make sure the date is valid and has format YYYY-MM-DD.')\n    errorMap.dateIssued = true\n  }\n\n  if (dateDue && !isValidDate(new Date(dateDue))) {\n    errors.push('Invalid date due. Please make sure the date is valid and has format YYYY-MM-DD.')\n    errorMap.dateDue = true\n  }\n\n  _validateInvoiceItems(items, errors, errorMap)\n\n  if (discount < 0) {\n    errors.push(`Discount provided is less than 0. Please include a discount greater than or equal to 0.`)\n    errorMap.discount = true\n  }\n\n  if (taxPercent < 0) {\n    errors.push(`Tax provided is less than 0. Please include a tax greater than or equal to 0.`)\n    errorMap.taxPercent = true\n  }\n\n  if (shipping < 0) {\n    errors.push(`Shipping cost provided is less than 0. Please include a shipping cost greater than or equal to 0.`)\n    errorMap.shipping = true\n  }\n\n  if (errors.length) throw new DetailedErrors(errors, errorMap)\n}\n\nexport const emailInvoiceLink = (invoice) => {\n  const {\n    payee,\n    payor,\n    dateDue,\n    currency,\n    items,\n    discount,\n    taxPercent,\n    shipping,\n    note,\n  } = invoice\n\n  const subtotal = getSubtotal(items)\n  const subtotalAfterDiscount = getSubtotalAfterDiscount(subtotal, discount)\n  const tax = getTax(taxPercent, subtotalAfterDiscount)\n  const total = currencySymbolMap[currency] + numberToNumberString(getTotal(subtotalAfterDiscount, tax, shipping))\n\n  const dueDate = isValidDate(new Date(dateDue))\n    ? (' due ' + new Date(dateDue).toLocaleDateString())\n    : ''\n\n  let lineItems = ''\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i]\n    const { name, quantity, unitPrice } = item\n\n    if (quantity < 0 || unitPrice < 0 || isNaN(Number(quantity)) || isNaN(Number(unitPrice))) continue\n\n    lineItems += `${name} (${quantity} x ${currencySymbolMap[currency]}${numberToNumberString(Number(unitPrice))})\\n`\n  }\n\n  const subject = encodeURIComponent(`Invoice from ${payee.name || ''} for ${total}`)\n  const body = encodeURIComponent(`Hi ${payor.name || ''},\\n`\n      + '\\n'\n      + `Here is an invoice for ${total}${dueDate}.\\n`\n      + '\\n'\n      + lineItems\n      + '\\n'\n      + (note || 'Thank you!') + '\\n'\n      + '\\n'\n      + `${payee.name || ''}`)\n\n  return `mailto:${payor.email || ''}?subject=${subject}&body=${body}`\n}\n\nexport const downloadInvoicePdf = async (invoice) => {\n  const pdfObject = reactPdf(<InvoicePdf invoice={invoice} />)\n  const pdfBlob = await pdfObject.toBlob()\n\n  const { payor, dateIssued } = invoice\n  const issuedDate = isValidDate(new Date(dateIssued))\n    ? (`-${new Date(dateIssued).toLocaleDateString()}`)\n    : ''\n\n  const pdfFilename = `Invoice-${payor.name || ''}${issuedDate}.pdf`\n\n  const pdf = new File([pdfBlob], pdfFilename, { type: 'application/pdf' })\n\n  downloadFileLocally(pdf)\n}\n\nexport const getUserDefaults = (sqlJsDb, userId) => {\n  const sql = `\n    SELECT *\n    FROM user\n    WHERE uuid = '${userId}';\n  `\n\n  const userDefaults = getSqlRows(sqlJsDb, sql)\n\n  if (userDefaults.length) return userDefaults[0]\n  else return {}\n}\n\nexport const getCustomers = (sqlJsDb) => {\n  const sql = `\n    SELECT *\n    FROM agent;\n  `\n\n  return getSqlRows(sqlJsDb, sql)\n}\n\nexport const getProducts = (sqlJsDb) => {\n  const sql = `\n    SELECT *\n    FROM resource;\n  `\n\n return getSqlRows(sqlJsDb, sql)\n}\n\nconst _insertInvoice = (invoice) => {\n  const {\n    uuid,\n    payee,\n    payor,\n    currency,\n    dateIssued,\n    dateDue,\n    discount,\n    taxPercent,\n    shipping,\n    note,\n  } = invoice\n\n  const payorUuid = `\n    SELECT uuid\n    FROM agent\n    WHERE name = $payor_name COLLATE NOCASE\n  `\n\n  return {\n    sql:`\n      INSERT INTO invoice (\n        uuid,\n        date_issued, date_paid, date_due,\n        currency, discount, tax_percent, shipping, note,\n        payee_uuid, payee_name, payee_email,\n        payor_uuid, payor_name, payor_email,\n        created_date\n      )\n      VALUES (\n        $uuid, $date_issued, $date_paid, $date_due,\n        $currency, $discount, $tax_percent, $shipping, $note,\n        $payee_uuid, $payee_name, $payee_email,\n        (${payorUuid}), $payor_name, $payor_email,\n        $created_date\n      );\n    `,\n    bindValues: {\n      $uuid: uuid,\n      $date_issued: new Date(dateIssued).toISOString(),\n      $date_due: dateDue ? new Date(dateDue).toISOString() : null,\n      $currency: currency,\n      $discount: discount,\n      $tax_percent: taxPercent,\n      $shipping: shipping,\n      $note: note,\n      $payee_uuid: payee.userId,\n      $payee_name: payee.name,\n      $payee_email: payee.email,\n      $payor_name: payor.name,\n      $payor_email: payor.email\n    }\n  }\n}\n\nconst _insertItem = (invoiceUuid, item, itemNumber) => {\n  const { name, unitPrice, quantity } = item\n\n  const resourceUuid = `\n    SELECT uuid\n    FROM resource\n    WHERE name = $item_name COLLATE NOCASE\n  `\n  return {\n    sql: `\n      INSERT INTO invoice_item (invoice_uuid, item_number, item_name, quantity, unit_price, created_date, resource_uuid)\n      VALUES ($invoice_uuid, $item_number, $item_name, $quantity, $unit_price, $created_date, (${resourceUuid}));\n    `,\n    bindValues: {\n      $invoice_uuid: invoiceUuid,\n      $item_number: itemNumber,\n      $item_name: name,\n      $unit_price: unitPrice,\n      $quantity: quantity,\n    }\n  }\n}\n\nconst _upsertResource = (item) => {\n  const { resourceUuid, name, unitPrice } = item\n  return {\n    sql: `\n      INSERT INTO resource (uuid, name, unit_price, created_date)\n      VALUES ($uuid, $name, $unit_price, $created_date)\n      ON CONFLICT DO NOTHING;\n    `,\n    bindValues: {\n      $uuid: resourceUuid,\n      $name: name,\n      $unit_price: unitPrice,\n    }\n  }\n}\n\nconst _upsertPayor = (payor) => {\n  return {\n    sql: `\n      INSERT INTO agent (uuid, name, email, created_date)\n      VALUES ($uuid, $name, $email, $created_date)\n      ON CONFLICT DO NOTHING;\n    `,\n    bindValues: {\n      $uuid: payor.uuid,\n      $name: payor.name,\n      $email: payor.email\n    }\n  }\n}\n\nconst _upsertUserDefaultSettings = (payee, currency) => {\n  return {\n    sql: `\n      INSERT INTO user (uuid, name, currency, created_date)\n      VALUES ($uuid, $name, $currency, $created_date)\n      ON CONFLICT(uuid) DO NOTHING;\n    `,\n    bindValues: {\n      $uuid: payee.userId,\n      $name: payee.name,\n      $currency: currency\n    }\n  }\n}\n\nexport const createInvoice = async (invoice) => {\n  const upsertUserDefaults = _upsertUserDefaultSettings(invoice.payee, invoice.currency)\n  const upsertPayor = _upsertPayor(invoice.payor)\n  const upsertResources = invoice.items.map(item => _upsertResource(item))\n  const insertItems = invoice.items.map((item, i) => _insertItem(invoice.uuid, item, i))\n  const insertInvoice = _insertInvoice(invoice)\n\n  const sqlStatements = setCreatedDateOnSqlStatements([\n    upsertUserDefaults,\n    upsertPayor,\n    ...upsertResources,\n    ...insertItems,\n    insertInvoice,\n  ])\n\n  await window.userbase.execSql({ databaseName: USERBASE_DATABASE_NAME, sqlStatements })\n}\n","export const APP_NAME = 'prinvoice'\nexport const DEFAULT_CURRENCY = 'USD'\n\nexport const USERBASE_APP_ID = '0a95df12-c854-4043-abc8-653e19a9a6b6'\nexport const USERBASE_DATABASE_NAME = 'prinvoice_main'\n","import React, { Component } from 'react'\nimport { object, bool, array, func, number, string } from 'prop-types'\nimport './NewInvoiceForm.css'\nimport {\n  getItemAmount,\n} from './logic'\nimport {\n  currencySymbolMap,\n  numberToNumberString,\n  getSpanWithTextHighlighted,\n} from '../../utils'\n\nexport default class NewInvoiceFormItemRow extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      error: undefined,\n      productDropdownOpen: false,\n    }\n\n    this.productDropdownRef = React.createRef()\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutsideProductsDropdown)\n    document.addEventListener('keydown', this.handleHitEnter)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutsideProductsDropdown)\n    document.removeEventListener('keydown', this.handleHitEnter)\n  }\n\n  handleClickOutsideProductsDropdown = (e) => {\n    const { productDropdownOpen } = this.state\n    if (!productDropdownOpen) return\n    if (productDropdownOpen && this.productDropdownRef && !this.productDropdownRef.current.contains(e.target)) {\n      this.setState({ productDropdownOpen: false })\n    }\n  }\n\n  handleHitEnter = (e) => {\n    const { productDropdownOpen } = this.state\n    if (!productDropdownOpen) return\n    const ENTER_KEY_CODE = 13\n    if (e.key === 'Enter' || e.keyCode === ENTER_KEY_CODE) {\n      this.setState({ productDropdownOpen: false })\n    }\n  }\n\n  handleToggleProductDropdown = () => {\n    this.setState({ productDropdownOpen: true })\n  }\n\n  handleSetItem = (itemIndex, product) => {\n    this.props.handleSetItem(itemIndex, product)\n    this.setState({ productDropdownOpen: false })\n  }\n\n  render() {\n    const {\n      item,\n      itemIndex,\n      currency,\n      canRemove,\n      productDropdownOptions,\n      chosenProducts,\n      handleRemoveItem,\n      handleUpdateItem,\n      errorMap,\n    } = this.props\n    const {\n      productDropdownOpen,\n    } = this.state\n\n    return (\n      <tr className='invoice-form-item-row'>\n        <td>\n          {canRemove && <div className='invoice-form-item-row-cancel-button no-select' onClick={() => handleRemoveItem(item.resourceUuid)}>x</div>}\n          <input\n            className={'text-input item-input' + (errorMap.name ? ' invalid' : '')}\n            placeholder='Item name*'\n            value={item.name || ''}\n            autoComplete='none'\n            onFocus={this.handleToggleProductDropdown}\n            onChange={(e) => handleUpdateItem(itemIndex, item.resourceUuid, 'name', e.target.value)}\n          />\n\n          { productDropdownOpen &&\n            <div className='dropdown active' id='new-invoice-form-dropdown-menu' ref={this.productDropdownRef}>\n              <div className='dropdown-content'>\n                { productDropdownOptions\n                  .filter(product => !chosenProducts[product.uuid] && (!item.name || product.name.toLowerCase().indexOf(item.name.toLowerCase()) !== -1 ))\n                  .map(product => {\n                    return (\n                      <div className='dropdown-item' key={product.uuid} onClick={() => this.handleSetItem(itemIndex, product)}>\n                        { getSpanWithTextHighlighted(product.name, item.name) }\n                        <div className='dropdown-item-label'>{currencySymbolMap[currency]}{numberToNumberString(product.unit_price)}</div>\n                      </div>\n                    )\n                })}\n              </div>\n            </div>\n           }\n        </td>\n        <td className='invoice-form-quantity-input-row'>\n          <input\n            className={'text-input quantity-input' + ((Number(item.quantity) > 0 && !errorMap.quantity) ? '' : ' invalid')}\n            type='number'\n            required\n            value={item.quantity}\n            onChange={(e) => handleUpdateItem(itemIndex, item.resourceUuid, 'quantity', e.target.value)}\n          />\n          <span className='invoice-form-multiply-sign'>X</span>\n        </td>\n        <td className='invoice-form-price-input-row'>\n          <span className='invoice-form-price-input-currency-sign'>{currencySymbolMap[currency]}</span>\n          <input\n            className={'text-input price-input validity' + ((Number(item.unitPrice) >= 0 && !errorMap.unitPrice) ? '' : ' invalid')}\n            type='number'\n            min='0'\n            step='any'\n            required\n            value={item.unitPrice}\n            onChange={(e) => handleUpdateItem(itemIndex, item.resourceUuid, 'unitPrice', e.target.value)}\n          />\n        </td>\n        <td className='invoice-form-item-amount-cell input-height'>\n          {canRemove && <span className='invoice-form-delete-item-mobile' onClick={() => handleRemoveItem(item.resourceUuid)}>Remove</span>}\n          <span className='currency-symbol'>{currencySymbolMap[currency]}</span>\n          <span className='invoice-form-item-amount'>{numberToNumberString(getItemAmount(item))}</span>\n        </td>\n      </tr>\n    )\n  }\n}\n\nNewInvoiceFormItemRow.propTypes = {\n  item: object,\n  itemIndex: number,\n  canRemove: bool,\n  currency: string,\n  productDropdownOptions: array,\n  chosenProducts: object,\n  handleRemoveItem: func,\n  handleUpdateItem: func,\n  handleSetItem: func,\n  errorMap: object,\n}\n","import React, { Component } from 'react'\nimport { object } from 'prop-types'\nimport { v4 as uuidv4 } from 'uuid'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons/faExclamationTriangle'\nimport { faEnvelope } from '@fortawesome/free-regular-svg-icons/faEnvelope'\nimport { faFilePdf } from '@fortawesome/free-regular-svg-icons/faFilePdf'\nimport './NewInvoiceForm.css'\nimport {\n  newEmptyInvoice,\n  newEmptyInvoiceItem,\n  getSubtotal,\n  getSubtotalAfterDiscount,\n  getTax,\n  getTotal,\n  validateInvoice,\n  createInvoice,\n  getCustomers,\n  getProducts,\n  emailInvoiceLink,\n  downloadInvoicePdf,\n} from './logic'\nimport {\n  toUniversalDateFormat,\n  dateFormatRegex,\n  currencySymbolMap,\n  numberToNumberString,\n  getSpanWithTextHighlighted,\n} from '../../utils'\nimport NewInvoiceFormItemRow from './NewInvoiceFormItemRow'\n\nexport default class NewInvoiceForm extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      errors: [],\n      errorMap: { items: {}, payor: {}, payee: {} },\n      loading: false,\n      invoice: newEmptyInvoice(this.props.sqlJsDb, this.props.user),\n      editingTax: false,\n      customerDropdownOptions: getCustomers(this.props.sqlJsDb),\n      productDropdownOptions: getProducts(this.props.sqlJsDb),\n      customerDropdownOpen: false,\n      moreOptionsOpen: false\n    }\n\n    this.topOfPageRef = React.createRef()\n    this.customerDropdownRef = React.createRef()\n    this.taxWrapperRef = React.createRef()\n    this.moreOptionsRef = React.createRef()\n    this.mobileMoreOptionsRef = React.createRef()\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutsideTaxWrapper)\n    document.addEventListener('mousedown', this.handleClickOutsideCustomersDropdown)\n    document.addEventListener('mousedown', this.handleClickOutsideMoreOptionsDropdown)\n    document.addEventListener('keydown', this.handleHitEnter)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutsideTaxWrapper)\n    document.removeEventListener('mousedown', this.handleClickOutsideCustomersDropdown)\n    document.removeEventListener('mousedown', this.handleClickOutsideMoreOptionsDropdown)\n    document.removeEventListener('keydown', this.handleHitEnter)\n  }\n\n  handleUpdateAgent = (agent, property, value) => {\n    const { invoice, errorMap } = this.state\n    invoice[agent][property] = value\n\n    delete errorMap[agent][property]\n\n    let customerDropdownOpen = false\n    if (agent === 'payor' && property === 'name') {\n      customerDropdownOpen = true\n      invoice[agent].uuid = uuidv4() // ensures not using an existing UUID if changing name\n    }\n\n    this.setState({ invoice, errorMap, customerDropdownOpen })\n  }\n\n  handleChangeCurrency = (e) => {\n    const { invoice } = this.state\n    this.setState({ invoice: { ...invoice, currency: e.target.value }})\n  }\n\n  handleAddItem = () => {\n    const { invoice } = this.state\n    const { items } = invoice\n    items.push(newEmptyInvoiceItem())\n    this.setState({ invoice: { ...invoice, items }})\n  }\n\n  handleRemoveItem = (itemResourceUuid) => {\n    const { invoice, errorMap } = this.state\n    const { items } = invoice\n\n    const itemsWithItemRemoved = []\n    for (let i = 0; i < items.length; i++) {\n      const item = items[i]\n      if (item.resourceUuid !== itemResourceUuid) itemsWithItemRemoved.push(item)\n    }\n\n    delete errorMap.items[itemResourceUuid]\n\n    this.setState({ invoice: { ...invoice, items: itemsWithItemRemoved }, errorMap })\n  }\n\n  handleUpdateItem = (indexGuess, itemResourceUuid, property, value) => {\n    const { invoice, errorMap } = this.state\n    const { items } = invoice\n\n    const itemGuess = items[indexGuess]\n    if (itemGuess && itemGuess.resourceUuid === itemResourceUuid) {\n      // cache hit with guess, ok to update item value\n      items[indexGuess][property] = value\n      items[indexGuess].resourceUuid = property === 'name' ? uuidv4() : items[indexGuess].resourceUuid\n    } else {\n      // fallback to finding item with correct resourceUuid\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i]\n        if (item.resourceUuid === itemResourceUuid) {\n          item[property] = value\n          item.resourceUuid = property === 'name' ? uuidv4() : item.resourceUuid\n        }\n      }\n    }\n\n    if (errorMap.items[itemResourceUuid]) delete errorMap.items[itemResourceUuid][property]\n\n    this.setState({ invoice: { ...invoice, items }, errorMap })\n  }\n\n  handleUpdateInvoiceProperty = (property, value) => {\n    const { invoice, errorMap } = this.state\n    invoice[property] = value\n\n    delete errorMap[property]\n\n    this.setState({ invoice, errorMap })\n  }\n\n  handleOpenTaxEditor = () => {\n    this.setState({ editingTax: true })\n  }\n\n  // https://stackoverflow.com/questions/32553158/detect-click-outside-react-component\n  handleClickOutsideTaxWrapper = (e) => {\n    const { editingTax } = this.state\n    if (!editingTax) return\n    if (this.taxWrapperRef && !this.taxWrapperRef.current.contains(e.target)) {\n      this.setState({ editingTax: false })\n    }\n  }\n\n  handleClickOutsideCustomersDropdown = (e) => {\n    const { customerDropdownOpen } = this.state\n    if (!customerDropdownOpen) return\n    if (this.customerDropdownRef && !this.customerDropdownRef.current.contains(e.target)) {\n      this.setState({ customerDropdownOpen: false })\n    }\n  }\n\n  handleHitEnter = (e) => {\n    const { editingTax, customerDropdownOpen } = this.state\n    if (!editingTax && !customerDropdownOpen) return\n    const ENTER_KEY_CODE = 13\n    if (e.key === 'Enter' || e.keyCode === ENTER_KEY_CODE) {\n      this.setState({ editingTax: false, customerDropdownOpen: false })\n    }\n  }\n\n  handleSaveInvoice = async () => {\n    const { invoice, loading, errorMap } = this.state\n    if (loading) return\n\n    this.setState({ loading: true })\n\n    try {\n      this.topOfPageRef.current.scrollIntoView({ behavior: 'smooth' })\n\n      validateInvoice(invoice)\n      await createInvoice(invoice)\n\n      this.setState({ loading: false })\n      window.location.hash = '#invoices'\n    } catch (e) {\n      this.setState({ loading: false, errors: e.errors || [e.message], errorMap: e.errorMap || errorMap })\n    }\n  }\n\n  handleToggleDropdown = (dropdownName, dropdownOpen) => {\n    this.setState({ [dropdownName]: dropdownOpen })\n  }\n\n  handleSetPayor = (customer) => {\n    const { invoice, errorMap } = this.state\n    delete errorMap.payor.name\n    this.setState({ invoice: { ...invoice, payor: { ...customer }, errorMap }, customerDropdownOpen: false })\n  }\n\n  handleSetItem = (itemNumber, product) => {\n    const { invoice } = this.state\n    const { items } = invoice\n    const { uuid, name, unit_price } = product\n\n    items[itemNumber] = {\n      resourceUuid: uuid,\n      unitPrice: unit_price,\n      name,\n      quantity: 1,\n    }\n\n    this.setState({ invoice: { ...invoice, items } })\n  }\n\n  handleClickOutsideMoreOptionsDropdown = (e) => {\n    const { moreOptionsOpen } = this.state\n    if (!moreOptionsOpen) return\n    if (this.moreOptionsRef && !this.moreOptionsRef.current.contains(e.target) &&\n      this.mobileMoreOptionsRef && !this.mobileMoreOptionsRef.current.contains(e.target)) {\n      this.setState({ moreOptionsOpen: false })\n    }\n  }\n\n  handleToggleMoreOptions = () => {\n    const { moreOptionsOpen } = this.state\n    this.setState({ moreOptionsOpen: !moreOptionsOpen })\n  }\n\n  render() {\n    const {\n      invoice,\n      editingTax,\n      loading,\n      errors,\n      errorMap,\n      customerDropdownOptions,\n      customerDropdownOpen,\n      moreOptionsOpen,\n    } = this.state\n\n    const {\n      uuid,\n      payee,\n      payor,\n      dateIssued,\n      dateDue,\n      currency,\n      items,\n      discount,\n      taxPercent,\n      shipping,\n    } = invoice\n\n    const subtotal = getSubtotal(items)\n    const subtotalAfterDiscount = getSubtotalAfterDiscount(subtotal, discount)\n    const tax = getTax(taxPercent, subtotalAfterDiscount)\n    const total = getTotal(subtotalAfterDiscount, tax, shipping)\n\n    return (\n      <div id='new-invoice-page' ref={this.topOfPageRef}>\n\n        <div className='topnav-container fixed'>\n          <ul className='topnav max-screen-width'>\n            <li>\n              <button className='button-inverted new-invoice-nav-button' id='cancel-invoice-button' onClick={() => window.confirm('Are you sure you want to cancel invoice?') && window.history.back()}>CANCEL</button>\n            </li>\n\n            <li className='new-invoice-header'>New Invoice</li>\n\n            <li id='new-invoice-nav-save-button-wrapper' className='right' ref={this.moreOptionsRef}>\n              <button className='button-inverted new-invoice-nav-button' id='save-invoice-button' onClick={this.handleSaveInvoice}>SAVE</button>\n              <button className='button-inverted new-invoice-nav-button' id='more-options-invoice-button' onClick={this.handleToggleMoreOptions}><span className='triangle-down'></span></button>\n              {moreOptionsOpen &&\n                <div className='dropdown active'>\n                  <div className='dropdown-content'>\n                    <div className='dropdown-item' onClick={() => window.location.href = emailInvoiceLink(invoice)}>Send<span className='float-right'><FontAwesomeIcon icon={faEnvelope} /></span></div>\n                    <div className='dropdown-item' onClick={() => downloadInvoicePdf(invoice)}>Download PDF<span className='float-right'><FontAwesomeIcon icon={faFilePdf} /></span></div>\n                  </div>\n                </div>\n              }\n            </li>\n          </ul>\n\n          {loading && <div className='loader fixed'></div>}\n        </div>\n\n        <div id='new-invoice-form'>\n          { errors && errors.length > 0 &&\n            <div className='invoice-errors'>\n              {errors.map((err, i) => {\n                return <div key={i} className='error'><span className='error-icon'><FontAwesomeIcon icon={faExclamationTriangle} /></span>{err}</div>\n              })}\n            </div>\n          }\n\n          <div className='paper-container'>\n            <div className='inner-paper-container'>\n\n              <div className='invoice-form-title'>INVOICE</div>\n\n              <div className='invoice-form-bill-from'>\n                <div className='invoice-form-bill-from-title invoice-form-section-title'>Bill from</div>\n\n                <input\n                  className={'text-input' + (errorMap.payee.name ? ' invalid' : '')}\n                  type='text'\n                  placeholder='Your name*'\n                  value={payee.name}\n                  onChange={(e) => this.handleUpdateAgent('payee', 'name', e.target.value)}\n                />\n\n                <div className='input-padding input-font-size pr-0'>{payee.email}</div>\n              </div>\n\n              <div className='invoice-form-bill-to'>\n                <div className='invoice-form-bill-to-title invoice-form-section-title'>Bill to</div>\n\n                <div className='invoice-form-bill-to-content'>\n                  <input\n                    className={'text-input top-text-input' + (errorMap.payor.name ? ' invalid' : '')}\n                    placeholder='Name*'\n                    autoComplete='none'\n                    value={payor.name || ''}\n                    onFocus={() => this.handleToggleDropdown('customerDropdownOpen', true)}\n                    onChange={(e) => this.handleUpdateAgent('payor', 'name', e.target.value)}\n                  />\n\n                  { customerDropdownOpen &&\n                    <div className='dropdown active' id='new-invoice-form-dropdown-menu' ref={this.customerDropdownRef}>\n                      <div className='dropdown-content'>\n                        { customerDropdownOpen &&\n                          customerDropdownOptions\n                          .filter(cust => !payor.name || cust.name.toLowerCase().indexOf(payor.name.toLowerCase()) !== -1 )\n                          .map(cust => {\n                            return (\n                              <div className='dropdown-item' key={cust.uuid} onClick={() => this.handleSetPayor(cust)}>\n                                { getSpanWithTextHighlighted(cust.name, payor.name) }\n                                <div className='dropdown-item-label'>{cust.email}</div>\n                              </div>\n                            )\n                        })}\n                      </div>\n                    </div>\n                  }\n\n                  <input\n                    className={'text-input bottom-text-input'  + (errorMap.payor.email ? ' invalid' : '')}\n                    placeholder='Email'\n                    autoComplete='none'\n                    value={payor.email || ''}\n                    onChange={(e) => this.handleUpdateAgent('payor', 'email', e.target.value)}\n                  />\n                </div>\n\n              </div>\n\n              <div className='invoice-form-metadata'>\n                <div className='invoice-form-metadata-row input-height'>\n                  <div className='invoice-form-metadata-title invoice-form-section-title'>Issued</div>\n                  <div className='invoice-form-metadata-content'>\n                    <input\n                      className={'text-input top-text-input validity' + (errorMap.dateIssued ? ' invalid' : '')}\n                      type='date'\n                      defaultValue={toUniversalDateFormat(dateIssued)}\n                      placeholder='yyyy-mm-dd' // for safari\n                      pattern={dateFormatRegex}\n                      maxLength={10}\n                      onChange={(e) => this.handleUpdateInvoiceProperty('dateIssued', e.target.value)}\n                    />\n                  </div>\n                </div>\n\n                <div className='invoice-form-metadata-row input-height'>\n                  <div className='invoice-form-metadata-title invoice-form-section-title'>Due</div>\n                  <div className='invoice-form-metadata-content'>\n                    <input\n                      className={'text-input bottom-text-input validity' + (errorMap.dateDue ? ' invalid' : '')}\n                      type='date'\n                      defaultValue={toUniversalDateFormat(dateDue)}\n                      placeholder='yyyy-mm-dd' // for safari\n                      pattern={dateFormatRegex}\n                      maxLength={10}\n                      onChange={(e) => this.handleUpdateInvoiceProperty('dateDue', e.target.value)}\n                    />\n                  </div>\n                </div>\n\n                <div id='invoice-form-id' className='invoice-form-metadata-row input-height'>\n                  <div className='invoice-form-metadata-title invoice-form-section-title'>ID</div>\n                  <div className='invoice-form-metadata-content' title={uuid}>\n                    {uuid.substring(0, 8)}\n                    <span className='hidden-but-copy-pastable-text'>{uuid.substring(8)}</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className='invoice-form-items-section'>\n                <div className='invoice-form-items-section-title invoice-form-section-title'>Items</div>\n                <div className='invoice-form-currency-selector invoice-form-off-text'>\n                  <span className='triangle-down'></span>\n                  <select defaultValue={currency} onChange={this.handleChangeCurrency}>\n                    {Object.keys(currencySymbolMap).map(currencyOption => {\n                      return <option value={currencyOption} key={currencyOption}>{currencyOption}</option>\n                    })}\n                  </select>\n                </div>\n\n                <table className='invoice-form-items-table'>\n                  <thead>\n                    <tr>\n                      <th>Item</th>\n                      <th>Quantity</th>\n                      <th>Price</th>\n                      <th>Amount</th>\n                    </tr>\n                  </thead>\n\n                  <tbody>\n\n                    { (() => {\n                      const chosenProducts = {}\n                      for (let i = 0; i < items.length; i++) {\n                        chosenProducts[items[i].resourceUuid] = true\n                      }\n\n                      return items.map((item, i) => {\n                        return (\n                          <NewInvoiceFormItemRow\n                            key={i}\n                            item={item}\n                            itemIndex={i}\n                            canRemove={items.length > 1}\n                            currency={currency}\n                            productDropdownOptions={this.state.productDropdownOptions}\n                            chosenProducts={chosenProducts}\n                            handleRemoveItem={this.handleRemoveItem}\n                            handleUpdateItem={this.handleUpdateItem}\n                            handleSetItem={this.handleSetItem}\n                            errorMap={errorMap.items[item.resourceUuid] || {}}\n                          />\n                        )\n                      })\n                    })()}\n\n                    <tr>\n                      <td>\n                        <input\n                          id='add-item-button'\n                          className='button'\n                          type='button'\n                          value='Add an item'\n                          onClick={this.handleAddItem}\n                        />\n                      </td>\n                    </tr>\n\n                  </tbody>\n\n                  <tfoot>\n                    <tr>\n                      <td className='double-border' colSpan='4'></td>\n                    </tr>\n\n                    <tr className='input-height'>\n                      <td></td>\n                      <td className='invoice-form-footer-header' colSpan='2'>Subtotal</td>\n                      <td className='invoice-form-footer-value'>\n                        <div className='currency-symbol'>{currencySymbolMap[currency]}</div>\n                        <div className='invoice-form-item-amount'>{numberToNumberString(subtotal)}</div>\n                      </td>\n                    </tr>\n\n                    <tr id='discount-input-row' className='input-height'>\n                      <td></td>\n                      <td className='invoice-form-footer-header' colSpan='2'>Discount</td>\n                      <td className='invoice-form-footer-value'>\n                        <div className='currency-symbol input-height'>{currencySymbolMap[currency]}</div>\n                        <input\n                          className={'text-input invoice-form-footer-property-input validity' + ((Number(discount) >= 0 && !errorMap.discount) ? '' : ' invalid')}\n                          type='number'\n                          min='0'\n                          step='any'\n                          value={discount}\n                          onChange={(e) => this.handleUpdateInvoiceProperty('discount', e.target.value)}\n                        />\n                      </td>\n                    </tr>\n\n                    <tr className='input-height'>\n                      <td></td>\n                      <td className='invoice-form-footer-header' colSpan='2'>\n                        <span id='invoice-form-tax-header' ref={this.taxWrapperRef} onClick={this.handleOpenTaxEditor}>\n                          <span style={{ paddingRight: '8px' }}>Tax</span>\n                          <span className='invoice-form-off-text'>\n                            (\n                            <span className={'dotted-border-bottom' + ((Number(taxPercent) >= 0 && !errorMap.taxPercent) ? '' : ' invalid')}>\n                              {editingTax\n                                ? <input\n                                  id='invoice-form-tax-input'\n                                  className={'input-no-style validity' + ((Number(taxPercent) >= 0 && !errorMap.taxPercent) ? '' : ' invalid')}\n                                  type='number'\n                                  min='0'\n                                  step='any'\n                                  onChange={(e) => this.handleUpdateInvoiceProperty('taxPercent', e.target.value)}\n                                  value={taxPercent}\n                                />\n                                : taxPercent\n                              }\n                              %\n                            </span>\n                            )\n                          </span>\n                        </span>\n                      </td>\n                      <td className='invoice-form-footer-value'>\n                        <div className='currency-symbol'>{currencySymbolMap[currency]}</div>\n                        <div className='invoice-form-item-amount'>{numberToNumberString(tax)}</div>\n                      </td>\n                    </tr>\n\n                    <tr id='shipping-input-row' className='input-height'>\n                      <td></td>\n                      <td className='invoice-form-footer-header' colSpan='2'>Shipping</td>\n                      <td className='invoice-form-footer-value'>\n                        <div className='currency-symbol input-height'>{currencySymbolMap[currency]}</div>\n                        <input\n                          className={'text-input validity invoice-form-footer-property-input' + ((Number(shipping) >= 0 && !errorMap.shipping) ? '' : ' invalid')}\n                          type='number'\n                          min='0'\n                          step='any'\n                          value={shipping}\n                          onChange={(e, elm) => this.handleUpdateInvoiceProperty('shipping', e.target.value, e, elm)}\n                        />\n                      </td>\n                    </tr>\n\n                    <tr id='invoice-form-final-row' className='bold'>\n                      <td id='invoice-form-note'>\n                        <textarea className='text-input' placeholder='Note' onChange={(e, elm) => this.handleUpdateInvoiceProperty('note', e.target.value, e, elm)}></textarea>\n                      </td>\n                      <td className='invoice-form-footer-header input-height' colSpan='2'>Total</td>\n                      <td className='invoice-form-footer-value input-height'>\n                        <div className='currency-symbol'>{currencySymbolMap[currency]}</div>\n                        <div className='invoice-form-item-amount'>{numberToNumberString(total)}</div>\n                      </td>\n                    </tr>\n                  </tfoot>\n                </table>\n\n                <div id='mobile-save-more-buttons' ref={this.mobileMoreOptionsRef}>\n                  <button className='button-inverted' onClick={this.handleSaveInvoice}>SAVE</button>\n                  <div id='mobile-more-button' className={'input-height' + (moreOptionsOpen ? ' active' : '')} onClick={this.handleToggleMoreOptions}>More options</div>\n                  { moreOptionsOpen &&\n                    <div>\n                      <button className='button-inverted' style={{ marginBottom: '1em' }} onClick={() => window.location.href = emailInvoiceLink(invoice)}>Send<FontAwesomeIcon style={{marginLeft: '.5em'}} icon={faEnvelope} /></button>\n                      <button className='button-inverted' onClick={() => downloadInvoicePdf(invoice)}>Download PDF<FontAwesomeIcon style={{marginLeft: '.5em'}} icon={faFilePdf} /></button>\n                    </div>\n                  }\n                </div>\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nNewInvoiceForm.propTypes = {\n  user: object,\n  sqlJsDb: object\n}\n","import { CREATE_RESOURCE_TABLE } from './models/resource/resource'\nimport { CREATE_AGENT_TABLE } from './models/agent/agent'\nimport { CREATE_INVOICE_TABLE } from './models/event/invoice'\nimport { CREATE_INVOICE_ITEM_TABLE } from './models/event/invoiceItem'\nimport { CREATE_USER_TABLE } from './models/agent/user'\nimport { APP_NAME, USERBASE_DATABASE_NAME } from '../config'\nimport { readFile, flatten } from '../utils'\nimport { getBindValuePlaceholders } from './utils'\n\nconst CURRENT_VERSION = 1\n\nconst CREATE_VERSION_TABLE = `\n  CREATE TABLE version (\n    _v          PRIMARY KEY NOT NULL,\n    app_name    TEXT NOT NULL\n  );\n`\n\nconst SELECT_VERSION = `\n  SELECT _v\n  FROM version;\n`\n\nconst INSERT_VERSION =  `\n  INSERT INTO version (_v, app_name)\n  VALUES ($_v, $app_name);\n`\n\nconst VERSION_1_MIGRATION = [\n  { sql: CREATE_VERSION_TABLE },\n  { sql: INSERT_VERSION, bindValues: { '$_v': 1, '$app_name': APP_NAME } },\n  { sql: CREATE_RESOURCE_TABLE },\n  { sql: CREATE_AGENT_TABLE },\n  { sql: CREATE_INVOICE_TABLE },\n  { sql: CREATE_INVOICE_ITEM_TABLE },\n  { sql: CREATE_USER_TABLE },\n]\n\n// overwrite payee_uuid with userId, and payor_uuid with agent stored with provided name\nconst _upsertInvoices = (sqlJsDb, userId) => {\n  const table = sqlJsDb.exec(`SELECT * FROM invoice;`)\n  const { columns, values } = table[0]\n\n  let payeeUuidIndex, payorUuidIndex, payorNameIndex = -1\n  for (let i = 0 ; i < columns.length; i++) {\n    const column = columns[i]\n    if (column === 'payee_uuid') payeeUuidIndex = i\n    else if (column === 'payor_uuid') payorUuidIndex = i\n    else if (column === 'payor_name') payorNameIndex = i\n\n    if (payeeUuidIndex >= 0 && payorUuidIndex >= 0 && payorNameIndex >= 0) break\n  }\n\n  const bindValuePlaceHolders = []\n\n  for (let i = 0; i < values.length; i++) {\n    // overwrite payee_uuid with userId\n    values[i][payeeUuidIndex] = userId\n\n    // ovewrite payor_uuid with uuid of agent stored with the provided payor_name\n    const payorUuid = `\n      SELECT uuid\n      FROM agent\n      WHERE name = ? COLLATE NOCASE\n    `\n    const singleRowBindValuePlaceholders = []\n    singleRowBindValuePlaceholders.length = columns.length\n    singleRowBindValuePlaceholders.fill('?')\n    singleRowBindValuePlaceholders[payorUuidIndex] = `(${payorUuid})`\n    bindValuePlaceHolders.push(`(${singleRowBindValuePlaceholders})`)\n\n    // ? in query above will be replaced with payorName\n    const payorName = values[i][payorNameIndex]\n    values[i][payorUuidIndex] = payorName\n  }\n\n  return {\n    sql: `\n      INSERT INTO invoice (${columns})\n      VALUES ${bindValuePlaceHolders}\n      ON CONFLICT DO NOTHING;\n    `,\n    bindValues: flatten(values)\n  }\n}\n\n// overwrite resource_uuid with resource stored with provided name\nconst _upsertInvoiceItems = (sqlJsDb) => {\n  const table = sqlJsDb.exec(`SELECT * FROM invoice_item;`)\n  const { columns, values } = table[0]\n\n  let resourceUuidIndex, itemNameIndex = -1\n  for (let i = 0 ; i < columns.length; i++) {\n    const column = columns[i]\n    if (column === 'resource_uuid') resourceUuidIndex = i\n    else if (column === 'item_name') itemNameIndex = i\n\n    if (resourceUuidIndex >= 0 && itemNameIndex >= 0) break\n  }\n\n  const bindValuePlaceHolders = []\n\n  for (let i = 0; i < values.length; i++) {\n    // ovewrite resource_uuid with uuid of resource stored with the provided item_name\n    const resourceUuid = `\n      SELECT uuid\n      FROM resource\n      WHERE name = ? COLLATE NOCASE\n    `\n    const singleRowBindValuePlaceholders = []\n    singleRowBindValuePlaceholders.length = columns.length\n    singleRowBindValuePlaceholders.fill('?')\n    singleRowBindValuePlaceholders[resourceUuidIndex] = `(${resourceUuid})`\n    bindValuePlaceHolders.push(`(${singleRowBindValuePlaceholders})`)\n\n    // ? in query above will be replaced with resourceName\n    const resourceName = values[i][itemNameIndex]\n    values[i][resourceUuidIndex] = resourceName\n  }\n\n  return {\n    sql: `\n      INSERT INTO invoice_item (${columns})\n      VALUES ${bindValuePlaceHolders}\n      ON CONFLICT DO NOTHING;\n    `,\n    bindValues: flatten(values)\n  }\n}\n\nconst _upsert = (sqlJsDb, tableName) => {\n  const table = sqlJsDb.exec(`SELECT * FROM ${tableName};`)\n  const { columns, values } = table[0]\n\n  return {\n    sql: `\n      INSERT INTO ${tableName} (${columns})\n      VALUES ${getBindValuePlaceholders(columns, values)}\n      ON CONFLICT DO NOTHING;\n    `,\n    bindValues: flatten(values)\n  }\n}\n\nexport const init = async (onChange) => {\n  let version\n  const changeHandler = ({ db }) => {\n    if (!version) {\n      try {\n        version = db.exec(SELECT_VERSION)[0].values[0][0]\n      } catch {\n        version = 0\n      }\n    }\n\n    // no more migrations to run\n    if (version === CURRENT_VERSION) onChange({ db })\n  }\n\n  await window.userbase.openSqlJsDatabase({ databaseName: USERBASE_DATABASE_NAME, changeHandler })\n\n  // run migrations to initalize to current version\n  let migration\n  switch (version) {\n    case 1:\n      // no need to do anything, already initialized\n      break\n    case 0:\n    default:\n      migration = VERSION_1_MIGRATION\n  }\n\n  if (migration) await window.userbase.execSql({ databaseName: USERBASE_DATABASE_NAME, sqlStatements: migration })\n\n  version = CURRENT_VERSION\n}\n\nexport const restoreFromBackupFile = async (backupFile, userId) => {\n  let version, sqlJsDb\n  try {\n    const data = new Uint8Array(await readFile(backupFile))\n    sqlJsDb = new window.sqlJs.Database(data)\n    version = sqlJsDb.exec(SELECT_VERSION)[0].values[0][0]\n  } catch (e) {\n    console.warn(e)\n    throw new Error('Invalid backup file.')\n  }\n\n  if (version !== 1) throw new Error('Incompatible version of Prinvoice.\\n\\nPlease use the latest version of Prinvoice to restore this backup.')\n\n  await window.userbase.execSql({\n    databaseName: USERBASE_DATABASE_NAME,\n    sqlStatements: [\n      _upsert(sqlJsDb, 'resource'),\n      _upsert(sqlJsDb, 'agent'),\n      _upsertInvoices(sqlJsDb, userId),\n      _upsertInvoiceItems(sqlJsDb),\n    ]\n  })\n}","export const CREATE_RESOURCE_TABLE = `\n  CREATE TABLE resource (\n    uuid              PRIMARY KEY,\n    name              TEXT NOT NULL,  \n    unit_price        REAL,\n    created_date      TEXT NOT NULL,\n    UNIQUE (name COLLATE NOCASE)\n  );\n`\n","export const CREATE_AGENT_TABLE = `\n  CREATE TABLE agent (\n    uuid            PRIMARY KEY,\n    name            TEXT NOT NULL,\n    email           TEXT,\n    created_date    TEXT NOT NULL,\n    UNIQUE (name COLLATE NOCASE)\n  );\n`\n","export const CREATE_INVOICE_TABLE = `\n  CREATE TABLE invoice (\n    uuid            PRIMARY KEY NOT NULL,\n    date_issued     TEXT NOT NULL,\n    date_due        TEXT,\n    date_paid       TEXT,\n    currency        TEXT,\n    discount        REAL,\n    tax_percent     REAL,\n    shipping        REAL,\n    note            TEXT,\n\n    payee_uuid      TEXT,\n    payee_name      TEXT,\n    payee_email     TEXT,\n\n    payor_uuid      TEXT,\n    payor_name      TEXT,\n    payor_email     TEXT,\n\n    created_date    TEXT NOT NULL,\n    FOREIGN KEY(payor_uuid) REFERENCES agent(uuid)\n  );\n`\n","export const CREATE_INVOICE_ITEM_TABLE = `\n  CREATE TABLE invoice_item (\n    invoice_uuid    TEXT NOT NULL,\n    item_number     INTEGER NOT NULL,\n    item_name       TEXT NOT NULL,\n    resource_uuid   REAL NOT NULL,\n    quantity        REAL NOT NULL,\n    unit_price      REAL NOT NULL,\n    created_date    TEXT NOT NULL,\n    PRIMARY KEY(invoice_uuid, item_number),\n    FOREIGN KEY(invoice_uuid) REFERENCES invoice(uuid),\n    FOREIGN KEY(resource_uuid) REFERENCES resource(uuid)\n  );\n`\n","export const CREATE_USER_TABLE = `\n  CREATE TABLE user (\n    uuid               PRIMARY KEY NOT NULL,\n    name               TEXT,\n    currency           TEXT,\n    created_date       TEXT NOT NULL\n  );\n`\n","import {\n  getSqlRows,\n} from '../../database/utils'\nimport { USERBASE_DATABASE_NAME } from '../../config'\n\nconst sql_invoice_subtotal = 'SUM(quantity * unit_price) AS subtotal'\n\nconst sql_invoice_tax = '(100 + tax_percent) / 100'\nconst sql_invoice_total = `SUM((subtotal - discount) * (${sql_invoice_tax}) + shipping) AS total`\n\nexport const getInvoices = (sqlJsDb) => {\n  const sqlInvoiceSubtotals = `\n    SELECT\n      invoice.*,\n      invoice_uuid,  \n      ${sql_invoice_subtotal}\n    FROM\n      invoice\n    INNER JOIN\n      invoice_item ON invoice_item.invoice_uuid = invoice.uuid\n    GROUP BY\n      invoice_uuid\n  `\n\n  const sqlInvoiceTotals = `\n    SELECT\n      *,\n      ${sql_invoice_total}\n    FROM (${sqlInvoiceSubtotals})\n    GROUP BY invoice_uuid\n  `\n\n  const sql = `\n    SELECT\n      invoice_with_total.*,\n      agent.name AS customer\n    FROM\n      (${sqlInvoiceTotals}) AS invoice_with_total\n    INNER JOIN\n      agent ON agent.uuid = invoice_with_total.payor_uuid\n    ORDER BY\n      invoice_with_total.created_date DESC\n  ;`\n\n  return getSqlRows(sqlJsDb, sql)\n}\n\nexport const getInvoiceItems = (sqlJsDb, invoiceUuid) => {\n  const sql = `\n    SELECT *\n    FROM invoice_item\n    WHERE invoice_uuid = \"${invoiceUuid}\"\n    ORDER BY item_number ASC\n  ;`\n  return getSqlRows(sqlJsDb, sql)\n}\n\nexport const getInvoiceObjectForExport = (invoice, invoiceItems) => {\n  return {\n    uuid: invoice.uuid,\n    dateIssued: invoice.date_issued,\n    dateDue: invoice.date_due,\n    datePaid: invoice.date_paid,\n    currency: invoice.currency,\n    discount: invoice.discount,\n    taxPercent: invoice.tax_percent,\n    shipping: invoice.shipping,\n    note: invoice.note,\n    payor: {\n      name: invoice.payor_name,\n      email: invoice.payor_email,\n      uuid: invoice.payor_uuid\n    },\n    payee: {\n      name: invoice.payee_name,\n      email: invoice.payee_email,\n      uuid: invoice.payee_uuid\n    },\n    items: invoiceItems.map((item) => {\n      return {\n        itemNumber: item.item_number,\n        name: item.item_name,\n        quantity: item.quantity,\n        unitPrice: item.unit_price\n      }\n    })\n  }\n}\n\nexport const setDatePaid = async (invoiceUuid, datePaid) => {\n  await window.userbase.execSql({\n    databaseName: USERBASE_DATABASE_NAME,\n    sql: `\n      UPDATE invoice\n      SET date_paid = $date_paid\n      WHERE uuid = $uuid\n    ;`,\n    bindValues: {\n      $date_paid: datePaid ? datePaid.toISOString() : null,\n      $uuid: invoiceUuid\n    }\n  })\n}\n\nexport const deleteInvoice = async (invoiceUuid) => {\n  const deleteInvoiceItems = {\n    sql: `\n      DELETE FROM invoice_item\n      WHERE invoice_uuid = $invoice_uuid\n    ;`,\n    bindValues: {\n      $invoice_uuid: invoiceUuid\n    }\n  }\n\n  const deleteInvoice = {\n    sql: `\n      DELETE FROM invoice\n      WHERE uuid = $uuid\n    ;`,\n    bindValues: {\n      $uuid: invoiceUuid\n    }\n  }\n\n  await window.userbase.execSql({\n    databaseName: USERBASE_DATABASE_NAME,\n    sqlStatements: [\n      deleteInvoiceItems,\n      deleteInvoice\n    ]\n  })\n}","import React, { Component } from 'react'\nimport { object, func, bool } from 'prop-types'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelope } from '@fortawesome/free-regular-svg-icons/faEnvelope'\nimport { faFilePdf } from '@fortawesome/free-regular-svg-icons/faFilePdf'\nimport { faTrashAlt } from '@fortawesome/free-regular-svg-icons/faTrashAlt'\nimport './InvoicesDashboard.css'\nimport {\n  toUniversalDateFormat,\n  currencySymbolMap,\n  numberToNumberString,\n  dateFormatRegex,\n  isValidDate,\n} from '../../utils'\nimport {\n  setDatePaid,\n  getInvoiceItems,\n  getInvoiceObjectForExport,\n  deleteInvoice,\n } from './logic'\nimport {\n  emailInvoiceLink,\n  downloadInvoicePdf\n} from '../NewInvoiceForm/logic'\n\nexport default class InvoicesDashboardRow extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      editingDatePaid: false,\n      datePaidInEditMode: this.props.invoice.date_paid || new Date(),\n      loading: false,\n      rowMenuOpen: false\n    }\n\n    this.datePaidEditor = React.createRef()\n    this.rowMenu = React.createRef()\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n    document.addEventListener('mousedown', this.handleClickOutsideDatePaidEditor)\n    document.addEventListener('mousedown', this.handleClickOutsideRowMenu)\n    document.addEventListener('keydown', this.handleHitEnter)\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n    document.removeEventListener('mousedown', this.handleClickOutsideDatePaidEditor)\n    document.removeEventListener('mousedown', this.handleClickOutsideRowMenu)\n    document.removeEventListener('keydown', this.handleHitEnter)\n  }\n\n  handleClickOutsideDatePaidEditor = async (e) => {\n    const { editingDatePaid, datePaidInEditMode } = this.state\n    if (!editingDatePaid) return\n    if (editingDatePaid && this.datePaidEditor && !this.datePaidEditor.current.contains(e.target)) {\n      await this.handleSetDatePaid(this.props.invoice.uuid, datePaidInEditMode)\n    }\n  }\n\n  handleClickOutsideRowMenu = async (e) => {\n    const { rowMenuOpen } = this.state\n    if (!rowMenuOpen) return\n    if (this.rowMenu && !this.rowMenu.current.contains(e.target)) {\n      this.setState({ rowMenuOpen: false })\n    }\n  }\n\n  handleHitEnter = async (e) => {\n    const { editingDatePaid, datePaidInEditMode } = this.state\n    if (!editingDatePaid) return\n    const ENTER_KEY_CODE = 13\n    if (e.key === 'Enter' || e.keyCode === ENTER_KEY_CODE) {\n      await this.handleSetDatePaid(this.props.invoice.uuid, datePaidInEditMode)\n    }\n  }\n\n  handleEditDatePaid = async () => {\n    const { updatingRowStatus, handleUpdatingRowStatus } = this.props\n    const { editingDatePaid } = this.state\n    if (updatingRowStatus || editingDatePaid) return\n    this.setState({ editingDatePaid: true, rowMenuOpen: false })\n    handleUpdatingRowStatus(true)\n  }\n\n  handleUpdateDate = (e) => {\n    this.setState({ datePaidInEditMode: e.target.value })\n  }\n\n  handleUnsetDatePaid = async () => {\n    const datePaid = null\n    await this.handleSetDatePaid(this.props.invoice.uuid, datePaid)\n  }\n\n  handleSetDatePaid = async (invoiceUuid, datePaid) => {\n    const { handleUpdatingRowStatus } = this.props\n\n    const { loading } = this.state\n    if (loading) return\n\n    const { date_paid } = this.props.invoice\n\n    // no need to push changes to server\n    if (datePaid === date_paid) {\n      this.setState({ editingDatePaid: false })\n      handleUpdatingRowStatus(false)\n      return\n    }\n\n    try {\n      const finalDatePaid = datePaid === null ? datePaid : new Date(datePaid)\n      if (finalDatePaid !== null && !isValidDate(finalDatePaid)) return\n      this.setState({ loading: true })\n\n      await setDatePaid(invoiceUuid, finalDatePaid)\n    } catch {\n      // swallow error\n    }\n\n    if (this._isMounted) {\n      this.setState({ loading: false, editingDatePaid: false })\n      handleUpdatingRowStatus(false)\n    }\n  }\n\n  handleToggleRowMenu = () => {\n    const { rowMenuOpen } = this.state\n    this.setState({ rowMenuOpen: !rowMenuOpen })\n  }\n\n  handleEmailInvoiceLink = () => {\n    const { invoice, sqlJsDb } = this.props\n    const invoiceItems = getInvoiceItems(sqlJsDb, invoice.uuid)\n    const invoiceObject = getInvoiceObjectForExport(invoice, invoiceItems)\n    window.location.href = emailInvoiceLink(invoiceObject)\n  }\n\n  handleDownloadInvoicePdf = async () => {\n    const { invoice, sqlJsDb } = this.props\n    const invoiceItems = getInvoiceItems(sqlJsDb, invoice.uuid)\n    const invoiceObject = getInvoiceObjectForExport(invoice, invoiceItems)\n    await downloadInvoicePdf(invoiceObject)\n  }\n\n  handleDeleteInvocie = async () => {\n    const { invoice: { uuid }} = this.props\n    try {\n      await deleteInvoice(uuid)\n    } catch {\n      // swallow error\n    }\n  }\n\n  render() {\n    const {\n      invoice,\n      updatingRowStatus\n     } = this.props\n    const {\n      customer,\n      date_due,\n      date_paid,\n      currency,\n      total\n    } = invoice\n    const {\n      editingDatePaid,\n      datePaidInEditMode,\n      loading,\n      rowMenuOpen\n    } = this.state\n\n    return (\n      <tr>\n        <td className='invoice-dashboard-row-customer'>{customer}</td>\n        <td className='invoice-dashboard-row-date-due'><span className='invoice-dashboard-row-due-prefix'>Due: </span>{date_due ? new Date(date_due).toLocaleDateString() : '-'}</td>\n        <td className={'invoice-dashboard-date-paid' + (date_paid ? ' paid' : '') + ((updatingRowStatus && !editingDatePaid) ? ' editing-another-date-paid' : '')}>\n          { loading\n            ? <div className='loader'></div>\n            : (!editingDatePaid\n              ? <span onClick={this.handleEditDatePaid}>{date_paid ? 'Paid' : 'Unpaid'}</span>\n              : <div ref={this.datePaidEditor}>\n                <input\n                  className='text-input validity'\n                  type='date'\n                  defaultValue={toUniversalDateFormat(datePaidInEditMode)}\n                  placeholder='yyyy-mm-dd' // for safari\n                  pattern={dateFormatRegex}\n                  maxLength={10}\n                  onChange={this.handleUpdateDate}\n                />\n                <span onClick={this.handleUnsetDatePaid} className='invoice-dashboard-unset-date-paid'>X</span>\n              </div>\n            )\n          }\n        </td>\n        <td className='invoice-dashboard-amount' style={{ textAlign: 'right' }}>{currencySymbolMap[currency]}{numberToNumberString(total)}</td>\n        <td className='invoice-dashboard-ellipsis-wrapper' ref={this.rowMenu} onClick={this.handleToggleRowMenu}>\n          <div className={'invoice-dashboard-ellipsis no-select'  + (rowMenuOpen ? ' active' : '')}>...</div>\n          <div id='invoice-dashboard-ellipsis-dropdown-wrapper'>\n            <div className={'dropdown' + (rowMenuOpen ? ' active' : '')}>\n              <div className='dropdown-content'>\n                <div className='dropdown-item' onClick={this.handleEditDatePaid}>Mark as {date_paid ? 'unpaid' : 'paid'}<span className='float-right'>{currencySymbolMap[currency]}</span></div>\n                <div className='dropdown-divider' />\n                <div className='dropdown-item' onClick={this.handleEmailInvoiceLink}>Send<span className='float-right'><FontAwesomeIcon icon={faEnvelope} /></span></div>\n                <div className='dropdown-item' onClick={this.handleDownloadInvoicePdf}>Download PDF<span className='float-right'><FontAwesomeIcon icon={faFilePdf} /></span></div>\n                <div className='dropdown-divider' />\n                <div className='dropdown-item dangerous-hover' onClick={this.handleDeleteInvocie}>Delete<span className='float-right'><FontAwesomeIcon icon={faTrashAlt} /></span></div>\n              </div>\n            </div>\n          </div>\n        </td>\n      </tr>\n    )\n  }\n}\n\nInvoicesDashboardRow.propTypes = {\n  invoice: object,\n  handleUpdatingRowStatus: func,\n  updatingRowStatus: bool,\n  sqlJsDb: object\n}\n","import React, { Component } from 'react'\nimport { object } from 'prop-types'\nimport { getInvoices } from './logic'\nimport './InvoicesDashboard.css'\nimport InvoicesDashboardRow from './InvoicesDashboardRow'\n\nexport default class InvoicesDashboard extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      invoices: getInvoices(this.props.sqlJsDb),\n      error: undefined,\n      loading: false,\n      updatingRowStatus: false\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n\n  handleUpdatingRowStatus = (updatingRowStatus) => {\n    if (this._isMounted) this.setState({ updatingRowStatus })\n  }\n\n  render() {\n    const {\n      invoices,\n      updatingRowStatus\n    } = this.state\n\n    return (\n      <div id='invoice-dashboard' className='dashboard-with-table max-screen-width'>\n        <div className='dashboard-with-table-total'>{invoices.length} invoice{invoices.length === 1 ? '' : 's'}</div>\n        <div className='dashboard-with-table-outer-container'>\n          <div className='container'>\n            <table className='dashboard-table'>\n              <thead>\n                <tr>\n                  <th className='invoice-dashboard-customer'>Customer</th>\n                  <th className='invoice-dashboard-date-due'>Due</th>\n                  <th className='invoice-dashboard-date-paid'>Status</th>\n                  <th className='invoice-dashboard-amount' style={{ textAlign: 'right'}}>Amount</th>\n                  <th className='invoice-dashboard-ellipsis'></th>\n                </tr>\n              </thead>\n\n              {invoices.length > 0 &&\n                <tbody>\n                  {invoices.map(invoice => <InvoicesDashboardRow\n                    key={invoice.uuid}\n                    invoice={invoice}\n                    handleUpdatingRowStatus={this.handleUpdatingRowStatus}\n                    updatingRowStatus={updatingRowStatus}\n                    sqlJsDb={this.props.sqlJsDb}\n                  />)}\n                </tbody>\n              }\n\n            </table>\n\n            {!invoices.length && <div className='create-invoice-to-get-started'><a href='#new-invoice'>Create an invoice</a> to get started.</div>}\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nInvoicesDashboard.propTypes = {\n  sqlJsDb: object\n}\n","import {\n  getSqlRows,\n} from '../../database/utils'\n\nconst sql_invoice_subtotal = (userId) =>  `\n  SUM(\n    CASE \n      WHEN invoice.currency = (SELECT currency FROM user WHERE uuid = \"${userId}\")\n      THEN (quantity * unit_price)\n      ELSE 0\n    END\n  ) AS subtotal\n`\n\nconst sql_invoice_tax = '(100 + tax_percent) / 100'\nconst sql_invoice_total = (userId) => `\n  SUM(\n    CASE\n      WHEN currency = (SELECT currency FROM user WHERE uuid = \"${userId}\")\n      THEN ((subtotal - discount) * (${sql_invoice_tax}) + shipping)\n      ELSE 0\n    END\n  ) AS total\n`\n\nexport const getCustomers = (sqlJsDb, userId) => {\n  const sqlInvoiceSubtotals = `\n    SELECT    \n      invoice_uuid,\n      payor_uuid,\n      date_paid,\n      discount,\n      tax_percent,\n      shipping,\n      currency,\n      ${sql_invoice_subtotal(userId)}\n    FROM\n      invoice\n    INNER JOIN\n      invoice_item ON invoice_item.invoice_uuid = invoice.uuid\n    GROUP BY\n      invoice_uuid\n  `\n\n  const sqlInvoiceTotals = `\n    SELECT\n      payor_uuid,\n      date_paid,\n      ${sql_invoice_total(userId)}\n    FROM (${sqlInvoiceSubtotals})\n    GROUP BY invoice_uuid\n  `\n\n  const sql = `\n    SELECT\n      agent.name AS customer,\n      agent.email,\n      (SELECT currency FROM user WHERE uuid = \"${userId}\") AS currency,\n      SUM(\n        CASE\n          WHEN date_paid IS NOT NULL\n          THEN total\n          ELSE 0\n        END\n      ) AS amount_received,\n      SUM(\n        CASE\n          WHEN date_paid IS NULL\n          THEN total\n          ELSE 0\n        END\n      ) AS amount_owes\n    FROM (${sqlInvoiceTotals})\n    INNER JOIN agent ON agent.uuid = payor_uuid\n    GROUP BY payor_uuid\n    ORDER BY LOWER(customer) ASC\n  `\n\n  return getSqlRows(sqlJsDb, sql)\n}","import React, { Component } from 'react'\nimport { object } from 'prop-types'\nimport { getCustomers } from './logic'\nimport './CustomersDashboard.css'\nimport {\n  currencySymbolMap,\n  numberToNumberString,\n} from '../../utils'\n\nexport default class CustomersDashboard extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      customers: getCustomers(this.props.sqlJsDb, this.props.user.userId)\n    }\n  }\n\n  render() {\n    const { customers } = this.state\n\n    return (\n      <div id='customer-dashboard' className='dashboard-with-table max-screen-width'>\n        <div className='dashboard-with-table-total'>{customers.length} customer{customers.length === 1 ? '' : 's'}</div>\n        <div className='dashboard-with-table-outer-container'>\n          <div className='container'>\n            <table className='dashboard-table'>\n              <thead>\n                <tr>\n                  <th className='customer-dashboard-customer'>Customer</th>\n                  <th className='customer-dashboard-email'>Email</th>\n                  <th className='customer-dashboard-owes' style={{ textAlign: 'right'}}>Owes</th>\n                  <th className='customer-dashboard-received' style={{ textAlign: 'right'}}>Received</th>\n                </tr>\n              </thead>\n\n              {customers.length > 0 &&\n                <tbody>\n                  {customers.map(cust => {\n                    const {\n                      customer,\n                      email,\n                      currency,\n                      amount_owes,\n                      amount_received,\n                    } = cust\n\n                    return (\n                      <tr key={customer}>\n                        <td className='customer-dashboard-customer'>{customer}</td>\n                        <td className='customer-dashboard-email'>{email || ''}</td>\n                        <td className='customer-dashboard-owes' style={{ textAlign: 'right' }}><span className='customer-dashboard-owes-prefix'>Owes: </span>{amount_owes ? `${currencySymbolMap[currency]}${numberToNumberString(amount_owes)}` : '-'}</td>\n                        <td className={'customer-dashboard-received' + (amount_received ? ' received' : '')} style={{ textAlign: 'right' }}>\n                          {amount_received ? `${currencySymbolMap[currency]}${numberToNumberString(amount_received)}` : '-'}\n                        </td>\n                      </tr>\n                    )\n                  })}\n\n                </tbody>\n              }\n\n            </table>\n\n            {!customers.length && <div className='create-invoice-to-get-started'><a href='#new-invoice'>Create an invoice</a> to get started.</div>}\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nCustomersDashboard.propTypes = {\n  sqlJsDb: object,\n  user: object\n}\n","import {\n  getSqlRows,\n} from '../../database/utils'\nimport {\n  getFirstDayOfMonth,\n  getLastDayOfMonth,\n  getMonthAsString,\n} from '../../utils'\nimport { DEFAULT_CURRENCY } from '../../config'\n\nconst DISPLAY_NUM_MONTHS = 3\nconst DISPLAY_NUM_RANKS = 5\n\nexport const getCurrency = (sqlJsDb, userId) => {\n  const sql = `SELECT currency FROM user WHERE uuid = \"${userId}\"`\n  const currencyRow = getSqlRows(sqlJsDb, sql)\n\n  return currencyRow.length\n    ? currencyRow[0].currency\n    : DEFAULT_CURRENCY\n}\n\nexport const hasCreatedInvoice = (sqlJsDb) => {\n  const sql = `SELECT * FROM invoice LIMIT 1;`\n  return getSqlRows(sqlJsDb, sql).length > 0\n}\n\nconst sql_item_amount = 'quantity * unit_price'\nconst sql_invoice_subtotal = `SUM(${sql_item_amount}) AS subtotal`\nconst sql_invoice_total_excluding_tax = 'SUM(subtotal - discount + shipping) AS invoice_total_excluding_tax'\n\nconst sql_invoice_tax = '(100 + tax_percent) / 100'\nconst sql_invoice_total = `SUM((subtotal - discount) * (${sql_invoice_tax}) + shipping) AS invoice_total`\n\nconst _getSalesForMonth = (sqlJsDb, start, end, currency) => {\n  const sqlInvoiceSubtotalsForMonth = `\n    SELECT\n      ${sql_invoice_subtotal},\n      invoice_uuid,\n      discount,\n      shipping\n    FROM\n      invoice\n    INNER JOIN\n      invoice_item ON invoice_item.invoice_uuid = invoice.uuid\n    WHERE\n      invoice.date_issued BETWEEN \"${start.toISOString()}\" AND \"${end.toISOString()}\" AND \n      invoice.currency = \"${currency}\"\n    GROUP BY\n      invoice_uuid\n  `\n\n  const sqlInvoiceTotalsForMonth = `\n    SELECT ${sql_invoice_total_excluding_tax}\n    FROM (${sqlInvoiceSubtotalsForMonth})\n    GROUP BY invoice_uuid\n  `\n\n  const sql = `\n    SELECT SUM(invoice_total_excluding_tax) AS sales\n    FROM (${sqlInvoiceTotalsForMonth});\n  `\n\n  return getSqlRows(sqlJsDb, sql)\n}\n\nexport const getMonthlySales = (sqlJsDb, currency, lastNMonths = DISPLAY_NUM_MONTHS) => {\n  const currentDate = new Date()\n\n  const sales = []\n  const months = []\n\n  for (let i = 1; i <= lastNMonths; i++) {\n    const start = getFirstDayOfMonth(currentDate, (lastNMonths - i) * -1)\n    const end = getLastDayOfMonth(currentDate, (lastNMonths - i) * -1)\n\n    sales.push(_getSalesForMonth(sqlJsDb, start, end, currency)[0].sales)\n    months.push(getMonthAsString(start))\n  }\n\n  return { sales, months }\n}\n\nexport const getSalesByCustomer = (sqlJsDb, currency) => {\n  const sqlInvoiceSubtotals = `\n    SELECT\n      ${sql_invoice_subtotal},\n      invoice_uuid,\n      payor_uuid,\n      discount,\n      shipping\n    FROM\n      invoice\n    INNER JOIN\n      invoice_item ON invoice_item.invoice_uuid = invoice.uuid\n    WHERE\n      invoice.currency = \"${currency}\"\n    GROUP BY\n      invoice_uuid\n  `\n\n  const sqlInvoiceTotals = `\n    SELECT\n      payor_uuid,\n      ${sql_invoice_total_excluding_tax}\n    FROM (${sqlInvoiceSubtotals})\n    GROUP BY invoice_uuid\n  `\n\n  const sqlSalesByCustomer = `\n    SELECT\n      agent.name AS customer,\n      SUM(invoice_total_excluding_tax) AS sales\n    FROM (${sqlInvoiceTotals})\n    INNER JOIN agent ON agent.uuid = payor_uuid\n    GROUP BY payor_uuid\n    ORDER BY sales DESC\n  `\n\n  const sqlRanks = `\n    SELECT\n      *,\n      RANK() OVER (ORDER BY sales DESC) AS rank\n    FROM (${sqlSalesByCustomer})  \n  `\n\n  const sqlTopCustomers = `\n    SELECT *\n    FROM (${sqlRanks})\n    WHERE rank <= ${DISPLAY_NUM_RANKS}\n  ;`\n\n  const sqlOtherCustomers = `\n    SELECT\n      \"Others\" AS customer,     \n      SUM(sales) AS sales\n    FROM (${sqlRanks})\n    WHERE rank > ${DISPLAY_NUM_RANKS}\n  ;`\n\n  const resultTopCustomers = getSqlRows(sqlJsDb, sqlTopCustomers)\n  const resultOtherCustomers = getSqlRows(sqlJsDb, sqlOtherCustomers)\n  const result = resultOtherCustomers[0].sales\n    ? resultTopCustomers.concat(resultOtherCustomers)\n    : resultTopCustomers\n\n  const sales = result.map(r => r.sales)\n  const customers = result.map(r => r.customer)\n\n  return { sales, customers }\n}\n\nexport const getSalesByProduct = (sqlJsDb, currency) => {\n  const sqlInvoiceItemAmounts = `\n    SELECT\n      (${sql_item_amount}) AS item_amount,\n      resource_uuid\n    FROM\n      invoice\n    INNER JOIN\n      invoice_item ON invoice_item.invoice_uuid = invoice.uuid\n    WHERE\n      invoice.currency = \"${currency}\"\n  `\n\n  const sqlSalesByProduct = `\n    SELECT\n      resource.name AS product,\n      SUM(item_amount) AS sales\n    FROM (${sqlInvoiceItemAmounts})\n    INNER JOIN resource ON resource.uuid = resource_uuid\n    GROUP BY resource_uuid\n    ORDER BY sales DESC\n  `\n\n  const sqlRanks = `\n    SELECT\n      *,\n      RANK() OVER (ORDER BY sales DESC) AS rank\n    FROM (${sqlSalesByProduct})  \n  `\n\n  const sqlTopProducts = `\n    SELECT *\n    FROM (${sqlRanks})\n    WHERE rank <= ${DISPLAY_NUM_RANKS}\n  ;`\n\n  const sqlOtherProducts = `\n    SELECT\n      \"Others\" AS product,     \n      SUM(sales) AS sales\n    FROM (${sqlRanks})\n    WHERE rank > ${DISPLAY_NUM_RANKS}\n  ;`\n\n  const resultTopProducts = getSqlRows(sqlJsDb, sqlTopProducts)\n  const resultOtherProducts = getSqlRows(sqlJsDb, sqlOtherProducts)\n  const result = resultOtherProducts[0].sales\n    ? resultTopProducts.concat(resultOtherProducts)\n    : resultTopProducts\n\n  const sales = result.map(r => r.sales)\n  const products = result.map(r => r.product)\n\n  return { sales, products }\n}\n\nexport const getTotals = (sqlJsDb, currency) => {\n  const sqlInvoiceSubtotals = `\n    SELECT    \n      invoice_uuid,\n      date_due,\n      date_paid,\n      discount,\n      tax_percent,\n      shipping,\n      ${sql_invoice_subtotal}\n    FROM\n      invoice\n    INNER JOIN\n      invoice_item ON invoice_item.invoice_uuid = invoice.uuid\n    WHERE\n      invoice.currency = \"${currency}\"\n    GROUP BY\n      invoice_uuid\n  `\n\n  const sqlInvoiceTotals = `\n    SELECT\n      date_due,\n      date_paid,      \n      ${sql_invoice_total}\n    FROM (${sqlInvoiceSubtotals})\n    GROUP BY invoice_uuid\n  `\n\n  const dateToday = new Date().toISOString()\n  const sql = `\n    SELECT\n      SUM(invoice_total) AS total,\n      SUM(\n        CASE\n          WHEN date_paid IS NOT NULL\n          THEN invoice_total\n          ELSE 0\n        END\n      ) AS received,\n      SUM(\n        CASE\n          WHEN date_paid IS NULL\n          THEN invoice_total\n          ELSE 0\n        END\n      ) AS owed,\n      SUM(\n        CASE\n          WHEN \n            date_paid IS NULL AND\n            date_due IS NOT NULL AND\n            date_due < \"${dateToday}\"\n          THEN invoice_total\n          ELSE 0\n        END\n      ) AS overdue\n    FROM (${sqlInvoiceTotals})\n  ;`\n\n  const result = getSqlRows(sqlJsDb, sql)\n  return result[0]\n}\n\nexport const getCustomerCount = (sqlJsDb) => {\n  const sql = `\n    SELECT COUNT(DISTINCT agent.uuid) AS count\n    FROM agent\n    INNER JOIN invoice ON invoice.payor_uuid = agent.uuid\n  ;`\n\n  const result = getSqlRows(sqlJsDb, sql)\n  return result[0].count\n}","import React, { Component } from 'react'\nimport { object } from 'prop-types'\nimport { Bar, HorizontalBar } from 'react-chartjs-2'\nimport './Dashboard.css'\nimport {\n  currencySymbolMap,\n  numberToNumberString,\n} from '../../utils'\nimport {\n  getCurrency,\n  getMonthlySales,\n  getSalesByCustomer,\n  getSalesByProduct,\n  hasCreatedInvoice,\n  getTotals,\n  getCustomerCount,\n} from './logic'\n\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props)\n\n    const {\n      sqlJsDb,\n      user\n    } = this.props\n    const { userId } = user\n\n    if (hasCreatedInvoice(sqlJsDb)) {\n      const currency = getCurrency(sqlJsDb, userId)\n      const monthlySales = getMonthlySales(sqlJsDb, currency)\n      const salesByCustomer = getSalesByCustomer(sqlJsDb, currency)\n      const salesByProduct = getSalesByProduct(sqlJsDb, currency)\n      const { total, received, owed, overdue } = getTotals(sqlJsDb, currency)\n      const customerCount = getCustomerCount(sqlJsDb)\n\n      this.state = {\n        currency,\n        monthlySales,\n        salesByCustomer,\n        salesByProduct,\n        total,\n        received,\n        owed,\n        overdue,\n        customerCount,\n      }\n    } else {\n      this.state = {\n        suggestCreateInvoice: true\n      }\n    }\n  }\n\n  render() {\n    const {\n      suggestCreateInvoice,\n      currency,\n      monthlySales,\n      salesByCustomer,\n      salesByProduct,\n      total,\n      received,\n      owed,\n      overdue,\n      customerCount,\n    } = this.state\n\n    const displayTotal = suggestCreateInvoice ? '0' : (currencySymbolMap[currency] + numberToNumberString(total || 0))\n    const displayReceived = suggestCreateInvoice ? '0' : (currencySymbolMap[currency] + numberToNumberString(received || 0))\n    const displayOwed = suggestCreateInvoice ? '0' : (currencySymbolMap[currency] + numberToNumberString(owed || 0))\n    const displayOverdue = suggestCreateInvoice ? '0' : (currencySymbolMap[currency] + numberToNumberString(overdue || 0))\n\n    return (\n      <div id='dashboard'>\n        <div className='dashboard-outer-container'>\n          <div className='container left-container'>\n            <div id='dashboard-total-row'>\n              <div id='dashboard-total-row-header'>Total</div>\n              <div id='dashboard-total-row-value'>{displayTotal}</div>\n            </div>\n\n            <div id='dashboard-invoice-values-grid'>\n              <div id='dashboard-received-value'>\n                <div className='dashboard-invoice-values-header'>Received</div>\n                <div className='dashboard-invoice-values-value'>{displayReceived}</div>\n              </div>\n\n              <div id='dashboard-owed-value'>\n                <div className='dashboard-invoice-values-header'>Owed</div>\n                <div className='dashboard-invoice-values-value'>{displayOwed}</div>\n              </div>\n\n              <div id='dashboard-overdue-value'>\n                <div className='dashboard-invoice-values-header'>Overdue</div>\n                <div className='dashboard-invoice-values-value'>{displayOverdue}</div>\n              </div>\n            </div>\n\n            <div id='dashboard-customers-row'>\n              <div id='dashboard-customers-row-header'>Customers</div>\n              <div id='dashboard-customers-row-value'>{customerCount || 0}</div>\n            </div>\n\n          </div>\n        </div>\n\n        <div className='dashboard-outer-container'>\n          <div className='container right-container'>\n            <div className='chart-header'>Sales</div>\n            { suggestCreateInvoice\n            ? <div className='create-invoice-to-get-started'><a href='#new-invoice'>Create an invoice</a> to get started.</div>\n            : <Bar\n              id='sales-by-month-chart'\n              data={{\n                labels: monthlySales.months,\n                datasets: [{\n                  data: monthlySales.sales,\n                  label: 'Sales Revenue',\n                  backgroundColor: '#c3eee7',\n                  borderColor: '#66bbae',\n                  borderWidth: 1\n                }]}}\n              options={{\n                maintainAspectRatio: false,\n                scales: {\n                  xAxes: [\n                    {\n                      gridLines: {\n                        drawBorder: true,\n                        lineWidth: 0\n                      }\n                    }\n                  ],\n                  yAxes: [\n                    {\n                      gridLines: {\n                        drawBorder: true,\n                        lineWidth: 0\n                      },\n                      ticks: {\n                        min: 0,\n                        callback: function (value) {\n                          return currencySymbolMap[currency] + numberToNumberString(value, 0)\n                        },\n                        fontColor: 'black'\n                      }\n                    }\n                  ]\n                },\n                tooltips: {\n                  callbacks: {\n                      label: function(tooltipItems) {\n                          return currencySymbolMap[currency] + numberToNumberString(tooltipItems.yLabel)\n                      }\n                  }\n                },\n              }}\n              legend={null}\n            />\n          }\n          </div>\n        </div>\n\n        <div className='dashboard-outer-container'>\n          <div id='sales-by-customer' className='container left-container'>\n            <div className='chart-header'>Sales by Customer</div>\n            { suggestCreateInvoice\n              ? <div className='create-invoice-to-get-started'><a href='#new-invoice'>Create an invoice</a> to get started.</div>\n              : <HorizontalBar\n                data={{\n                  labels: salesByCustomer.customers,\n                  datasets: [{\n                    data: salesByCustomer.sales,\n                    label: 'Sales Revenue',\n                    backgroundColor: '#c3eee7',\n                    borderColor: '#66bbae',\n                    borderWidth: 1\n                  }]\n                }}\n                options={{\n                  maintainAspectRatio: false,\n                  scales: {\n                    xAxes: [\n                      {\n                        gridLines: {\n                          display: false\n                        },\n                        ticks: {\n                          min: 0,\n                          callback: function (value) {\n                            return currencySymbolMap[currency] + numberToNumberString(value, 0)\n                          },\n                          fontColor: 'black'\n                        }\n                      }\n                    ],\n                    yAxes: [\n                      {\n                        gridLines: {\n                          display: true\n                        },\n                        ticks: {\n                          // shorten long labels\n                          callback: function(label) {\n                            const MAX_WORD_LEN = 10\n                            if (typeof label === 'string' && label.length > MAX_WORD_LEN) {\n                              return label.substring(0, MAX_WORD_LEN) + '…'\n                            } else {\n                              return label\n                            }\n                          }\n                        }\n                      },\n                    ]\n                  },\n                  tooltips: {\n                    callbacks: {\n                        label: function(tooltipItems) {\n                            return currencySymbolMap[currency] + numberToNumberString(tooltipItems.xLabel)\n                        }\n                    }\n                  },\n                }}\n                legend={null}\n              />\n            }\n          </div>\n        </div>\n\n        <div className='dashboard-outer-container'>\n          <div id='sales-by-product' className='container right-container'>\n            <div className='chart-header'>Sales by Product</div>\n            { suggestCreateInvoice\n            ? <div className='create-invoice-to-get-started'><a href='#new-invoice'>Create an invoice</a> to get started.</div>\n            : <HorizontalBar\n              data={{\n                labels: salesByProduct.products,\n                datasets: [{\n                  data: salesByProduct.sales,\n                  label: 'Sales Revenue',\n                  backgroundColor: '#c3eee7',\n                  borderColor: '#66bbae',\n                  borderWidth: 1\n                }]\n              }}\n              options={{\n                maintainAspectRatio: false,\n                scales: {\n                  xAxes: [\n                    {\n                      gridLines: {\n                        display: false\n                      },\n                      ticks: {\n                        min: 0,\n                        callback: function (value) {\n                          return currencySymbolMap[currency] + numberToNumberString(value, 0)\n                        },\n                        fontColor: 'black'\n                      }\n                    }\n                  ],\n                  yAxes: [\n                    {\n                      gridLines: {\n                        display: true\n                      },\n                      ticks: {\n                        // shorten long labels\n                        callback: function(label) {\n                          const MAX_WORD_LEN = 10\n                          if (typeof label === 'string' && label.length > MAX_WORD_LEN) {\n                            return label.substring(0, MAX_WORD_LEN) + '…'\n                          } else {\n                            return label\n                          }\n                        }\n                      }\n                    },\n                  ]\n                },\n                tooltips: {\n                  callbacks: {\n                      label: function(tooltipItems) {\n                          return currencySymbolMap[currency] + numberToNumberString(tooltipItems.xLabel)\n                      }\n                  }\n                },\n              }}\n              legend={null}\n            />\n          }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nDashboard.propTypes = {\n  sqlJsDb: object,\n  user: object\n}\n","import {\n  USERBASE_DATABASE_NAME\n} from '../../config'\n\nexport const updateDefaultCurrency = async (userId, currency) => {\n  const sql = `\n    INSERT INTO user (uuid, currency, created_date)\n    VALUES ($uuid, $currency, $created_date)\n    ON CONFLICT(uuid) DO UPDATE SET currency=excluded.currency;\n  `\n\n  const bindValues = {\n    $uuid: userId,\n    $currency: currency,\n    $created_date: new Date().toISOString()\n  }\n\n  await window.userbase.execSql({ databaseName: USERBASE_DATABASE_NAME, sql, bindValues })\n}","import React, { Component } from 'react'\nimport { object, func } from 'prop-types'\nimport './Account.css'\nimport { getCurrency } from '../Dashboard/logic'\nimport { DEFAULT_CURRENCY } from '../../config'\nimport { currencySymbolMap } from '../../utils'\nimport { updateDefaultCurrency } from './logic'\n\nexport default class Account extends Component {\n  constructor(props) {\n    super(props)\n\n    const { user, sqlJsDb } = this.props\n    const { username, userId } = user\n\n    this.state = {\n      username,\n      currency: getCurrency(sqlJsDb, userId) || DEFAULT_CURRENCY,\n      loadingUpdateAccount: false,\n      errorUpdateAccount: undefined,\n      loadingUpdatePassword: false,\n      errorUpdatePassword: undefined\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  handleInputChange = (event) => {\n    if (this.state.error) this.setState({ error: undefined })\n\n    const target = event.target\n    const value = target.value\n    const name = target.name\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleChangeCurrency = (e) => {\n    this.setState({ currency: e.target.value })\n  }\n\n  handleUpdateAccount = async (e) => {\n    e.preventDefault()\n    const { user } = this.props\n    const {\n      username,\n      currency,\n      loadingUpdateAccount\n    } = this.state\n\n    if (loadingUpdateAccount) return\n    this.setState({ loadingUpdateAccount: true, errorUpdateAccount: undefined  })\n\n    try {\n      await Promise.all([\n        user.username !== username && window.userbase.updateUser({ username, email: username }),\n        updateDefaultCurrency(user.userId, currency)\n      ])\n\n      if (this._isMounted) this.setState({ loadingUpdateAccount: false })\n    } catch (e) {\n      if (this._isMounted) this.setState({ loadingUpdateAccount: false, errorUpdateAccount: e.message })\n    }\n\n  }\n\n  handleUpdatePassowrd = async (e) => {\n    e.preventDefault()\n    const { currentPassword, newPassword, loadingUpdatePassword } = this.state\n\n    if (loadingUpdatePassword) return\n    this.setState({ loadingUpdatePassword: true, errorUpdatePassword: undefined  })\n\n    try {\n      await window.userbase.updateUser({ currentPassword, newPassword })\n\n      if (this._isMounted) this.setState({ loadingUpdatePassword: false })\n    } catch (e) {\n      if (this._isMounted) this.setState({ loadingUpdatePassword: false, errorUpdatePassword: e.message })\n    }\n  }\n\n  handleDeleteAccount = async (e) => {\n    e.preventDefault()\n    if (window.confirm('Are you sure you want to delete your account?')) {\n      await window.userbase.deleteUser()\n      this.props.handleResetState()\n    }\n  }\n\n  render() {\n    const {\n      username,\n      currency,\n      loadingUpdateAccount,\n      errorUpdateAccount,\n      loadingUpdatePassword,\n      errorUpdatePassword,\n    } = this.state\n\n    return (\n      <div id='account-page'>\n        <div className='container'>\n\n          <div className='account-page-section'>\n            <div className='account-page-header-section'>\n              <span className='account-page-header'>Edit account</span>\n              <div className='account-page-header-line' />\n            </div>\n\n            <form onSubmit={this.handleUpdateAccount}>\n              <div className='account-page-form-input-section'>\n                <label>Email</label>\n                <input\n                  className='text-input'\n                  type='email'\n                  name='username'\n                  autoComplete='username'\n                  onChange={this.handleInputChange}\n                  defaultValue={username}\n                  placeholder='Email'\n                />\n              </div>\n\n              <div className='account-page-form-input-section'>\n                <label>Default currency</label>\n                <select id='account-page-currency-selector' className='text-input' defaultValue={currency} onChange={this.handleChangeCurrency}>\n                  {Object.keys(currencySymbolMap).map(currencyOption => {\n                      return <option value={currencyOption} key={currencyOption}>{currencyOption}</option>\n                    })}\n                </select>\n              </div>\n\n              <input\n                className='button'\n                type='submit'\n                value='Update account'\n                disabled={loadingUpdateAccount}\n              />\n\n              {errorUpdateAccount && <div className='error'>{errorUpdateAccount}</div>}\n            </form>\n          </div>\n\n          <div className='account-page-section'>\n            <div className='account-page-header-section'>\n              <span className='account-page-header'>Change password</span>\n              <div className='account-page-header-line' />\n            </div>\n\n            <form onSubmit={this.handleUpdatePassowrd}>\n              <div className='account-page-form-input-section'>\n                <label>Current password</label>\n                <input\n                  className='text-input'\n                  type='password'\n                  name='currentPassword'\n                  autoComplete='password'\n                  onChange={this.handleInputChange}\n                  placeholder='Current password'\n                />\n              </div>\n\n              <div style={{ marginTop: '1em' }} className='account-page-form-input-section'>\n                <label>New password</label>\n                <input\n                  className='text-input'\n                  type='password'\n                  name='newPassword'\n                  autoComplete='new-password'\n                  onChange={this.handleInputChange}\n                  placeholder='New password'\n                />\n              </div>\n\n              <input\n                className='button'\n                type='submit'\n                value='Update password'\n                disabled={loadingUpdatePassword}\n              />\n\n              {errorUpdatePassword && <div className='error'>{errorUpdatePassword}</div>}\n            </form>\n          </div>\n\n          <div className='account-page-section'>\n            <div className='account-page-header-section'>\n              <span className='account-page-header dangerous'>Danger zone</span>\n              <div className='account-page-header-line' />\n            </div>\n\n            <form onSubmit={this.handleDeleteAccount}>\n              <input\n                id='delete-account-button'\n                className='button'\n                type='submit'\n                value='Delete account'\n              />\n            </form>\n          </div>\n\n        </div>\n      </div>\n    )\n  }\n}\n\nAccount.propTypes = {\n  sqlJsDb: object,\n  user: object,\n  handleResetState: func\n}\n","import React, { Component } from 'react'\nimport UserForm from './components/UserForm/UserForm.js'\nimport NavBar from './components/NavBar/NavBar.js'\nimport NewInvoiceForm from './components/NewInvoiceForm/NewInvoiceForm.js'\nimport { USERBASE_APP_ID } from './config'\nimport { init, restoreFromBackupFile } from './database/init'\nimport InvoicesDashboard from './components/InvoicesDashboard/InvoicesDashboard'\nimport CustomersDashboard from './components/CustomersDashboard/CustomersDashboard'\nimport Dashboard from './components/Dashboard/Dashboard'\nimport { hasCreatedInvoice } from './components/Dashboard/logic'\nimport Account from './components/Account/Account'\nimport { downloadFileLocally, importFile } from './utils.js'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      mode: undefined,\n      user: undefined,\n      lastUsedUsername: undefined,\n      sqlJsDb: undefined\n    }\n  }\n\n  async componentDidMount() {\n    window.addEventListener('hashchange', this.handleReadHash, false)\n\n    try {\n      const session = await window.userbase.init({ appId: USERBASE_APP_ID, updateUserHandler: this.handleSetUser })\n\n      // check if user is signed in\n      if (session.user) await this.loadData()\n\n      this.setState({ ...session })\n    } catch (e) {\n      try {\n        await window.userbase.signOut()\n      } catch {\n        // swallow error\n      }\n\n      localStorage.clear()\n\n      console.error(e)\n      window.alert('Oops! Something went wrong. Please refresh the page.\\n\\nIf the issue persists, please contact support@prinvoice.com.')\n    }\n\n    this.handleReadHash()\n  }\n\n  loadData = async () => {\n    const changeHandler = ({ db }) => this.setState({ sqlJsDb: db })\n    await init(changeHandler)\n  }\n\n  handleSignIn = async (user) => {\n    await this.loadData()\n    this.setState({ user })\n    window.location.hash = ''\n  }\n\n  handleSetUser = (userResult) => {\n    const { user } = userResult\n    this.setState({ user })\n  }\n\n  handleResetState = (lastUsedUsername) => {\n    this.setState({\n      lastUsedUsername,\n      user: undefined,\n      sqlJsDb: undefined,\n      mode: undefined\n    })\n    window.location.hash = 'sign-in'\n  }\n\n  handleUpdateUser = (user) => {\n    this.setState({ user })\n  }\n\n  getDefaultSignedInMode = () => {\n    const { sqlJsDb } = this.state\n    if (!sqlJsDb) return\n    return this.setState({ mode: hasCreatedInvoice(sqlJsDb) ? 'dashboard': 'invoices' })\n  }\n\n  handleReadHash = () => {\n    const { user } = this.state\n    const signedIn = !!user\n\n    const hashRoute = window.location.hash.substring(1)\n\n    switch (hashRoute) {\n      case 'sign-up':\n      case 'sign-in':\n        // if user is signed in already, re-route to default\n        return signedIn ? window.location.hash = '' : this.setState({ mode: hashRoute })\n\n      case 'dashboard':\n      case 'invoices':\n      case 'customers':\n      case 'new-invoice':\n      case 'account':\n        return signedIn ? this.setState({ mode: hashRoute }) : window.location.hash = 'sign-in'\n\n      default: {\n        if (signedIn && hashRoute === '') {\n          // default mode when user is signed in\n          return this.getDefaultSignedInMode()\n        } else if (signedIn) {\n          // user is signed in but on a route other than '', so re-route to ''\n          return window.location.hash = ''\n        } else {\n          return window.location.hash = 'sign-in'\n        }\n      }\n    }\n  }\n\n  handleDownloadData = () => {\n    const { sqlJsDb } = this.state\n    const data = sqlJsDb.export()\n    const filename = `Prinvoice_backup-${new Date().toLocaleDateString()}.db`\n    const file = new File([data], filename, { type: 'application/vnd.sqlite3' })\n    downloadFileLocally(file)\n  }\n\n  handleImportData = () => {\n    const fileExtension = navigator.userAgent.match('CriOS')\n      ? '' // accept any file type for Chrome iOS given issue in downloadFileLocally\n      : '.db'\n\n    importFile(fileExtension, this.handleImportedFile)\n  }\n\n  handleImportedFile = async (file) => {\n    const { restoringFromBackupFile, user } = this.state\n    if (restoringFromBackupFile) return\n\n    this.setState({ restoringFromBackupFile: true })\n\n    try {\n      await restoreFromBackupFile(file, user.userId)\n      this.setState({ restoringFromBackupFile: false })\n    } catch (e) {\n      window.alert(`Failed to restore from backup: ${e.message}`)\n      this.setState({ restoringFromBackupFile: false })\n    }\n  }\n\n  render() {\n    const {\n      user,\n      lastUsedUsername,\n      sqlJsDb,\n      mode\n    } = this.state\n\n    const loading = mode === undefined\n\n    return (\n      <div>\n        { loading &&\n          <div className='centered' style={{ top: '40%', width: '40%' }}><div className='loader'></div></div>\n        }\n\n        { (user && mode !== 'new-invoice') &&\n          <NavBar\n            key={'NavBar' + mode} // re-renders on mode change\n            mode={mode}\n            user={user}\n            handleDownloadData={this.handleDownloadData}\n            handleImportData={this.handleImportData}\n            handleResetState={this.handleResetState}\n          />\n        }\n\n        { mode && (() => {\n          switch (mode) {\n            case 'sign-up':\n            case 'sign-in':\n              return <UserForm\n                key={'UserForm' + mode} // re-renders on mode change\n                mode={mode}\n                lastUsedUsername={mode === 'sign-in' ? lastUsedUsername : ''}\n                handleSignIn={this.handleSignIn}\n              />\n\n            case 'new-invoice':\n              return <NewInvoiceForm\n                user={user}\n                sqlJsDb={sqlJsDb}\n              />\n\n            case 'invoices':\n              return <InvoicesDashboard\n                key={Math.random()} // re-renders on change to sqlJsDb\n                user={user}\n                sqlJsDb={sqlJsDb}\n              />\n\n            case 'customers':\n              return <CustomersDashboard\n                key={Math.random()} // re-renders on change to sqlJsDb\n                user={user}\n                sqlJsDb={sqlJsDb}\n              />\n\n            case 'account':\n              return <Account\n                user={user}\n                sqlJsDb={sqlJsDb}\n                handleResetState={this.handleResetState}\n              />\n\n            case 'dashboard':\n            default:\n              return <Dashboard\n                key={Math.random()} // re-renders on change to sqlJsDb\n                user={user}\n                sqlJsDb={sqlJsDb}\n              />\n          }\n        })()}\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport BigNumber from 'bignumber.js'\nimport { defaults } from 'react-chartjs-2'\nimport './index.css'\nimport App from './App'\n\n// for arbitrary precision arithmetic\nconst ROUND_HALF_EVEN = 6\nBigNumber.set({ DECIMAL_PLACES: 10, ROUNDING_MODE: ROUND_HALF_EVEN })\n\ndefaults.global.defaultFontFamily = 'Barlow'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}